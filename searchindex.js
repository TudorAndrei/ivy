Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/manipulation_functions/squeeze","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/manipulation_functions/squeeze","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/manipulation_functions/squeeze","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/manipulation_functions/squeeze","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/manipulation_functions/squeeze","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/manipulation_functions/squeeze","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/manipulation_functions/squeeze.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/manipulation_functions/squeeze.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/manipulation_functions/squeeze.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/manipulation_functions/squeeze.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/manipulation_functions/squeeze.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/manipulation_functions/squeeze.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[815,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[382,0,0,"-"],creation_functions:[383,0,0,"-"],data_type_functions:[386,0,0,"-"],data_types:[390,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[384,2,1,""],zeros:[385,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[386,1,1,""],finfo:[388,2,1,""],iinfo:[389,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[386,3,1,""],bits:[386,3,1,""],eps:[386,3,1,""],max:[386,3,1,""],min:[386,3,1,""],smallest_normal:[386,3,1,""]},"ivy.functional.backends.numpy.core":{device:[425,0,0,"-"],general:[427,0,0,"-"],gradients:[460,0,0,"-"],image:[465,0,0,"-"],linear_algebra:[469,0,0,"-"],logic:[473,0,0,"-"],math:[474,0,0,"-"],random:[476,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[426,1,1,""],clear_mem_on_dev:[425,2,1,""],dev:[425,2,1,""],dev_from_str:[425,2,1,""],dev_to_str:[425,2,1,""],gpu_is_available:[425,2,1,""],num_gpus:[425,2,1,""],to_dev:[425,2,1,""],tpu_is_available:[425,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[426,3,1,""],start:[426,3,1,""],stop:[426,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[427,2,1,""],arange:[428,2,1,""],argmax:[429,2,1,""],argmin:[430,2,1,""],array:[431,2,1,""],asarray:[427,2,1,""],astype:[427,2,1,""],cast:[432,2,1,""],ceil:[427,2,1,""],clip:[427,2,1,""],compile:[433,2,1,""],concatenate:[434,2,1,""],constant_pad:[427,2,1,""],container_types:[427,2,1,""],copy_array:[427,2,1,""],cumprod:[435,2,1,""],current_framework_str:[427,2,1,""],dtype:[436,2,1,""],dtype_bits:[437,2,1,""],dtype_from_str:[438,2,1,""],dtype_to_str:[439,2,1,""],equal:[427,2,1,""],floor:[427,2,1,""],floormod:[427,2,1,""],full:[440,2,1,""],gather:[441,2,1,""],gather_nd:[442,2,1,""],get_num_dims:[427,2,1,""],identity:[443,2,1,""],indices_where:[444,2,1,""],inplace_arrays_supported:[427,2,1,""],inplace_decrement:[445,2,1,""],inplace_increment:[446,2,1,""],inplace_update:[447,2,1,""],inplace_variables_supported:[427,2,1,""],is_array:[448,2,1,""],linear_resample:[449,2,1,""],linspace:[450,2,1,""],logspace:[451,2,1,""],matmul:[427,2,1,""],meshgrid:[427,2,1,""],multiprocessing:[427,2,1,""],one_hot:[452,2,1,""],ones_like:[453,2,1,""],round:[427,2,1,""],scatter_flat:[454,2,1,""],scatter_nd:[455,2,1,""],shape:[427,2,1,""],split:[456,2,1,""],to_list:[427,2,1,""],to_numpy:[427,2,1,""],to_scalar:[427,2,1,""],transpose:[457,2,1,""],unstack:[458,2,1,""],where:[427,2,1,""],zero_pad:[427,2,1,""],zeros_like:[459,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[461,2,1,""],is_variable:[462,2,1,""],stop_gradient:[463,2,1,""],variable:[464,2,1,""],variable_data:[460,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[466,2,1,""],gradient_image:[467,2,1,""],stack_images:[468,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[470,2,1,""],qr:[471,2,1,""],vector_to_skew_symmetric_matrix:[472,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[475,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[477,2,1,""],randint:[476,2,1,""],random_normal:[476,2,1,""],random_uniform:[476,2,1,""],seed:[476,2,1,""],shuffle:[476,2,1,""]},"ivy.functional.ivy":{array_api:[816,0,0,"-"],core:[849,0,0,"-"],nn:[1189,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[817,0,0,"-"],creation_functions:[818,0,0,"-"],data_type_functions:[821,0,0,"-"],data_types:[824,0,0,"-"],elementwise_functions:[825,0,0,"-"],function_and_method_signatures:[835,0,0,"-"],linear_algebra:[836,0,0,"-"],manipulation_functions:[838,0,0,"-"],searching_functions:[841,0,0,"-"],set_functions:[842,0,0,"-"],sorting_functions:[843,0,0,"-"],statistical_functions:[845,0,0,"-"],utility_functions:[846,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[817,4,1,""],nan:[817,4,1,""],pi:[817,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[819,2,1,""],zeros:[820,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[822,2,1,""],iinfo:[823,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[826,2,1,""],bitwise_and:[827,2,1,""],cos:[828,2,1,""],cosh:[829,2,1,""],isfinite:[830,2,1,""],isnan:[831,2,1,""],less:[832,2,1,""],logical_not:[833,2,1,""],sqrt:[834,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{vector_norm:[837,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[839,2,1,""],squeeze:[840,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[844,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[847,2,1,""],any:[848,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[850,0,0,"-"],compilation:[889,0,0,"-"],device:[891,0,0,"-"],dtype:[941,0,0,"-"],general:[965,0,0,"-"],gradients:[1063,0,0,"-"],image:[1079,0,0,"-"],linalg:[1086,0,0,"-"],logic:[1094,0,0,"-"],math:[1097,0,0,"-"],meta:[1113,0,0,"-"],multi_node:[1117,0,0,"-"],nest:[1161,0,0,"-"],random:[1173,0,0,"-"],reductions:[1180,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[851,2,1,""],builtin_add:[852,2,1,""],builtin_and:[853,2,1,""],builtin_bool:[854,2,1,""],builtin_contains:[855,2,1,""],builtin_deepcopy:[856,2,1,""],builtin_dir:[857,2,1,""],builtin_eq:[858,2,1,""],builtin_float:[859,2,1,""],builtin_floordiv:[860,2,1,""],builtin_ge:[861,2,1,""],builtin_getattr:[862,2,1,""],builtin_getattribute:[863,2,1,""],builtin_getitem:[864,2,1,""],builtin_gt:[865,2,1,""],builtin_int:[866,2,1,""],builtin_invert:[867,2,1,""],builtin_le:[868,2,1,""],builtin_lt:[869,2,1,""],builtin_mul:[870,2,1,""],builtin_ne:[871,2,1,""],builtin_neg:[872,2,1,""],builtin_or:[873,2,1,""],builtin_pos:[874,2,1,""],builtin_pow:[875,2,1,""],builtin_radd:[876,2,1,""],builtin_rand:[877,2,1,""],builtin_rfloordiv:[878,2,1,""],builtin_rmul:[879,2,1,""],builtin_ror:[880,2,1,""],builtin_rpow:[881,2,1,""],builtin_rsub:[882,2,1,""],builtin_rtruediv:[883,2,1,""],builtin_rxor:[884,2,1,""],builtin_setitem:[885,2,1,""],builtin_sub:[886,2,1,""],builtin_truediv:[887,2,1,""],builtin_xor:[888,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[890,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[891,1,1,""],DevClonedItem:[893,1,1,""],DevClonedIter:[894,1,1,""],DevClonedNest:[895,1,1,""],DevDistItem:[896,1,1,""],DevDistIter:[897,1,1,""],DevDistNest:[898,1,1,""],DevManager:[891,1,1,""],DevMapper:[900,1,1,""],DevMapperMultiProc:[901,1,1,""],MultiDev:[891,1,1,""],MultiDevItem:[903,1,1,""],MultiDevIter:[904,1,1,""],MultiDevNest:[905,1,1,""],Profiler:[906,1,1,""],clear_mem_on_dev:[907,2,1,""],default_device:[908,2,1,""],dev:[909,2,1,""],dev_clone:[910,2,1,""],dev_clone_array:[911,2,1,""],dev_clone_iter:[912,2,1,""],dev_clone_nest:[913,2,1,""],dev_dist:[914,2,1,""],dev_dist_array:[915,2,1,""],dev_dist_iter:[916,2,1,""],dev_dist_nest:[917,2,1,""],dev_from_str:[918,2,1,""],dev_to_str:[919,2,1,""],dev_unify:[920,2,1,""],dev_unify_array:[921,2,1,""],dev_unify_iter:[922,2,1,""],dev_unify_nest:[923,2,1,""],dev_util:[924,2,1,""],get_all_arrays_on_dev:[925,2,1,""],gpu_is_available:[926,2,1,""],num_arrays_on_dev:[927,2,1,""],num_cpu_cores:[928,2,1,""],num_gpus:[929,2,1,""],percent_used_mem_on_dev:[930,2,1,""],print_all_arrays_on_dev:[931,2,1,""],set_default_device:[932,2,1,""],set_split_factor:[933,2,1,""],split_factor:[934,2,1,""],split_func_call:[935,2,1,""],to_dev:[936,2,1,""],total_mem_on_dev:[937,2,1,""],tpu_is_available:[938,2,1,""],unset_default_device:[939,2,1,""],used_mem_on_dev:[940,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[891,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[891,3,1,""],da_tune_step:[891,3,1,""],dim_size:[891,3,1,""],ds_tune_step:[891,3,1,""],map:[891,3,1,""],repeated_config_check:[891,3,1,""],tune_step:[891,3,1,""],tuned:[891,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[900,3,1,""],map:[900,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[901,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[891,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[903,3,1,""],items:[903,3,1,""],keys:[903,3,1,""],shape:[903,3,1,""],values:[903,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[904,3,1,""],at_dev:[904,3,1,""],at_devs:[904,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[905,3,1,""],at_dev:[905,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[906,3,1,""],start:[906,3,1,""],stop:[906,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[941,1,1,""],DefaultFloatDtype:[941,1,1,""],DefaultIntDtype:[941,1,1,""],astype:[941,2,1,""],cast:[945,2,1,""],closest_valid_dtype:[946,2,1,""],convert_dtype:[947,2,1,""],default_dtype:[948,2,1,""],default_float_dtype:[949,2,1,""],default_int_dtype:[950,2,1,""],dtype:[951,2,1,""],dtype_bits:[952,2,1,""],dtype_from_str:[953,2,1,""],dtype_to_str:[954,2,1,""],invalid_dtype:[955,2,1,""],is_float_dtype:[956,2,1,""],is_int_dtype:[957,2,1,""],set_default_dtype:[958,2,1,""],set_default_float_dtype:[959,2,1,""],set_default_int_dtype:[960,2,1,""],unset_default_dtype:[961,2,1,""],unset_default_float_dtype:[962,2,1,""],unset_default_int_dtype:[963,2,1,""],valid_dtype:[964,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[941,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[941,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[941,3,1,""]},"ivy.functional.ivy.core.general":{"default":[990,2,1,""],abs:[966,2,1,""],all_equal:[967,2,1,""],arange:[968,2,1,""],arg_names:[969,2,1,""],argmax:[970,2,1,""],argmin:[971,2,1,""],array:[972,2,1,""],array_equal:[973,2,1,""],arrays_equal:[974,2,1,""],asarray:[965,2,1,""],assert_supports_inplace:[975,2,1,""],broadcast_to:[976,2,1,""],cache_fn:[977,2,1,""],ceil:[978,2,1,""],clip:[979,2,1,""],clip_matrix_norm:[980,2,1,""],clip_vector_norm:[981,2,1,""],concatenate:[982,2,1,""],constant_pad:[983,2,1,""],container_types:[984,2,1,""],copy_array:[985,2,1,""],cross:[986,2,1,""],cumprod:[987,2,1,""],cumsum:[988,2,1,""],current_framework_str:[989,2,1,""],einops_rearrange:[991,2,1,""],einops_reduce:[992,2,1,""],einops_repeat:[993,2,1,""],equal:[994,2,1,""],exists:[995,2,1,""],expand_dims:[996,2,1,""],flip:[997,2,1,""],floor:[998,2,1,""],floormod:[999,2,1,""],fourier_encode:[1000,2,1,""],full:[1001,2,1,""],gather:[1002,2,1,""],gather_nd:[1003,2,1,""],get_all_arrays_in_memory:[1004,2,1,""],get_min_base:[1005,2,1,""],get_min_denominator:[1006,2,1,""],get_num_dims:[1007,2,1,""],get_referrers_recursive:[1008,2,1,""],has_nans:[1009,2,1,""],identity:[1010,2,1,""],indices_where:[1011,2,1,""],inplace_arrays_supported:[1012,2,1,""],inplace_decrement:[1013,2,1,""],inplace_increment:[1014,2,1,""],inplace_update:[1015,2,1,""],inplace_variables_supported:[1016,2,1,""],is_array:[1017,2,1,""],isinf:[1018,2,1,""],linear_resample:[1019,2,1,""],linspace:[1020,2,1,""],logspace:[1021,2,1,""],match_kwargs:[1022,2,1,""],matmul:[1023,2,1,""],maximum:[1024,2,1,""],meshgrid:[1025,2,1,""],minimum:[1026,2,1,""],multiprocessing:[1027,2,1,""],num_arrays_in_memory:[1028,2,1,""],one_hot:[1029,2,1,""],ones:[1030,2,1,""],ones_like:[1031,2,1,""],print_all_arrays_in_memory:[1032,2,1,""],queue_timeout:[1033,2,1,""],repeat:[1034,2,1,""],reshape:[1035,2,1,""],round:[1036,2,1,""],scatter_flat:[1037,2,1,""],scatter_nd:[1038,2,1,""],set_min_base:[1039,2,1,""],set_min_denominator:[1040,2,1,""],set_queue_timeout:[1041,2,1,""],set_tmp_dir:[1042,2,1,""],shape:[1043,2,1,""],shape_to_tuple:[1044,2,1,""],split:[1045,2,1,""],stable_divide:[1046,2,1,""],stable_pow:[1047,2,1,""],stack:[1048,2,1,""],supports_inplace:[1049,2,1,""],swapaxes:[1050,2,1,""],tile:[1051,2,1,""],tmp_dir:[1052,2,1,""],to_list:[1053,2,1,""],to_numpy:[1054,2,1,""],to_scalar:[1055,2,1,""],transpose:[1056,2,1,""],try_else_none:[1057,2,1,""],unstack:[1058,2,1,""],value_is_nan:[1059,2,1,""],where:[1060,2,1,""],zero_pad:[1061,2,1,""],zeros_like:[1062,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1063,1,1,""],adam_step:[1065,2,1,""],adam_update:[1066,2,1,""],execute_with_gradients:[1067,2,1,""],gradient_descent_update:[1068,2,1,""],is_variable:[1069,2,1,""],lamb_update:[1070,2,1,""],lars_update:[1071,2,1,""],optimizer_update:[1072,2,1,""],set_with_grads:[1073,2,1,""],stop_gradient:[1074,2,1,""],unset_with_grads:[1075,2,1,""],variable:[1076,2,1,""],variable_data:[1077,2,1,""],with_grads:[1078,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1063,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1080,2,1,""],float_img_to_uint8_img:[1081,2,1,""],gradient_image:[1082,2,1,""],random_crop:[1083,2,1,""],stack_images:[1084,2,1,""],uint8_img_to_float_img:[1085,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1087,2,1,""],inv:[1088,2,1,""],matrix_norm:[1089,2,1,""],pinv:[1090,2,1,""],qr:[1091,2,1,""],svd:[1092,2,1,""],vector_to_skew_symmetric_matrix:[1093,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1095,2,1,""],logical_or:[1096,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1098,2,1,""],acosh:[1099,2,1,""],asin:[1100,2,1,""],atan2:[1102,2,1,""],atan:[1101,2,1,""],atanh:[1103,2,1,""],cosh:[1104,2,1,""],divide:[1105,2,1,""],erf:[1106,2,1,""],exp:[1107,2,1,""],log:[1108,2,1,""],sin:[1109,2,1,""],sinh:[1110,2,1,""],tan:[1111,2,1,""],tanh:[1112,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1114,2,1,""],maml_step:[1115,2,1,""],reptile_step:[1116,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1117,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1162,2,1,""],copy_nest:[1163,2,1,""],index_nest:[1164,2,1,""],map:[1165,2,1,""],map_nest_at_index:[1166,2,1,""],map_nest_at_indices:[1167,2,1,""],multi_index_nest:[1168,2,1,""],nested_indices_where:[1169,2,1,""],nested_map:[1170,2,1,""],set_nest_at_index:[1171,2,1,""],set_nest_at_indices:[1172,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1174,2,1,""],randint:[1175,2,1,""],random_normal:[1176,2,1,""],random_uniform:[1177,2,1,""],seed:[1178,2,1,""],shuffle:[1179,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1181,2,1,""],reduce_max:[1182,2,1,""],reduce_mean:[1183,2,1,""],reduce_min:[1184,2,1,""],reduce_prod:[1185,2,1,""],reduce_std:[1186,2,1,""],reduce_sum:[1187,2,1,""],reduce_var:[1188,2,1,""]},"ivy.functional.ivy.nn":{activations:[1190,0,0,"-"],layers:[1198,0,0,"-"],losses:[1211,0,0,"-"],norms:[1215,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1191,2,1,""],leaky_relu:[1192,2,1,""],relu:[1193,2,1,""],sigmoid:[1194,2,1,""],softmax:[1195,2,1,""],softplus:[1196,2,1,""],tanh:[1197,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1199,2,1,""],conv1d_transpose:[1200,2,1,""],conv2d:[1201,2,1,""],conv2d_transpose:[1202,2,1,""],conv3d:[1203,2,1,""],conv3d_transpose:[1204,2,1,""],depthwise_conv2d:[1205,2,1,""],dropout:[1206,2,1,""],linear:[1207,2,1,""],lstm_update:[1208,2,1,""],multi_head_attention:[1209,2,1,""],scaled_dot_product_attention:[1210,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1212,2,1,""],cross_entropy:[1213,2,1,""],sparse_cross_entropy:[1214,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1216,2,1,""]},"ivy.graph_compiler":{compiler:[1217,0,0,"-"],globals:[1220,0,0,"-"],graph:[1223,0,0,"-"],helpers:[1225,0,0,"-"],op_logging:[1226,0,0,"-"],param:[1227,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1218,2,1,""],show_graph:[1219,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1221,2,1,""],log_global_inference_rel_times:[1222,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1223,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1223,3,1,""],add_fn_to_dict:[1223,3,1,""],add_param:[1223,3,1,""],compiled:[1223,3,1,""],connect:[1223,3,1,""],debug_info:[1223,3,1,""],get_param:[1223,3,1,""],get_param_recursive:[1223,3,1,""],include_generators:[1223,3,1,""],increment_param_count:[1223,3,1,""],log_all_ops:[1223,3,1,""],params_all_empty:[1223,3,1,""],save_debug_info:[1223,3,1,""],set_param:[1223,3,1,""],show:[1223,3,1,""],show_debug_info:[1223,3,1,""],update_inference_times:[1223,3,1,""],with_array_caching:[1223,3,1,""]},"ivy.graph_compiler.param":{Param:[1227,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1227,3,1,""],count:[1227,3,1,""],depth:[1227,3,1,""],get:[1227,3,1,""],is_var:[1227,3,1,""],ptype:[1227,3,1,""],set:[1227,3,1,""],set_count:[1227,3,1,""],shape:[1227,3,1,""]},"ivy.stateful":{activations:[1232,0,0,"-"],converters:[1235,0,0,"-"],initializers:[1237,0,0,"-"],layers:[1246,0,0,"-"],module:[1258,0,0,"-"],norms:[1260,0,0,"-"],optimizers:[1262,0,0,"-"],sequential:[1268,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1233,1,1,""],GELU:[1234,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1233,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1234,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1236,2,1,""]},"ivy.stateful.initializers":{Constant:[1237,1,1,""],FirstLayerSiren:[1239,1,1,""],GlorotUniform:[1240,1,1,""],KaimingNormal:[1237,1,1,""],Ones:[1242,1,1,""],Siren:[1243,1,1,""],Uniform:[1237,1,1,""],Zeros:[1245,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1237,3,1,""],create_variables:[1237,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1239,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1240,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1237,3,1,""],create_variables:[1237,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1242,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1243,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1237,3,1,""],create_variables:[1237,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1245,3,1,""]},"ivy.stateful.layers":{Conv1D:[1247,1,1,""],Conv1DTranspose:[1248,1,1,""],Conv2D:[1249,1,1,""],Conv2DTranspose:[1250,1,1,""],Conv3D:[1251,1,1,""],Conv3DTranspose:[1252,1,1,""],DepthwiseConv2D:[1253,1,1,""],Dropout:[1254,1,1,""],LSTM:[1255,1,1,""],Linear:[1256,1,1,""],MultiHeadAttention:[1257,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1247,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1248,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1249,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1250,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1251,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1252,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1253,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1254,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1255,3,1,""],get_initial_state:[1255,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1256,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1257,3,1,""]},"ivy.stateful.module":{Module:[1259,1,1,""]},"ivy.stateful.module.Module":{__init__:[1259,3,1,""],build:[1259,3,1,""],build_mode:[1259,3,1,""],built:[1259,3,1,""],check_submod_rets:[1259,3,1,""],compile_graph:[1259,3,1,""],compile_on_next_step:[1259,3,1,""],get_mod_key:[1259,3,1,""],mod_depth:[1259,3,1,""],mod_height:[1259,3,1,""],mod_with_top_mod_key_chain:[1259,3,1,""],save_weights:[1259,3,1,""],show_graph:[1259,3,1,""],show_mod_in_top_mod:[1259,3,1,""],show_structure:[1259,3,1,""],show_v_in_top_v:[1259,3,1,""],sub_mods:[1259,3,1,""],track_submod_call_order:[1259,3,1,""],track_submod_rets:[1259,3,1,""],v_with_top_v_key_chains:[1259,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1261,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1261,3,1,""]},"ivy.stateful.optimizers":{Adam:[1263,1,1,""],LAMB:[1264,1,1,""],LARS:[1265,1,1,""],Optimizer:[1266,1,1,""],SGD:[1267,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1263,3,1,""],set_state:[1263,3,1,""],state:[1263,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1264,3,1,""],set_state:[1264,3,1,""],state:[1264,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1265,3,1,""],set_state:[1265,3,1,""],state:[1265,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1266,3,1,""],compile_graph:[1266,3,1,""],compile_on_next_step:[1266,3,1,""],set_state:[1266,3,1,""],show_graph:[1266,3,1,""],step:[1266,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1267,3,1,""],set_state:[1267,3,1,""],state:[1267,3,1,""]},"ivy.stateful.sequential":{Sequential:[1269,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1269,3,1,""]},"ivy.verbosity":{cprint:[1274,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1273,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1262,1263,1264],"02886":1229,"100":[1117,1229,1271],"141592653589793":817,"2021":1229,"2102":1229,"360":[825,828,1097,1109,1111],"718281828459045":817,"754":[817,821,822,825,834],"999":[1063,1065,1066,1070,1262,1263,1264],"abstract":[891,906,1229,1262,1266],"boolean":[40,41,825,827,831,833,891,926,938,941,955,964,965,967,973,974,1009,1011,1012,1016,1017,1018,1049,1059,1063,1069,1094,1095,1096,1113,1114,1115,1117],"break":43,"case":[15,18,19,40,41,42,43,825,826,891,930,937,940,965,968,1035,1037,1038,1086,1089,1091,1117,1161,1164,1168,1229,1246,1257,1258,1259,1262,1266,1275],"catch":[965,990],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,386,425,426,821,823,891,893,894,895,896,897,898,900,901,903,904,905,906,918,919,941,965,969,1022,1063,1077,1117,1161,1163,1170,1211,1213,1214,1223,1227,1229,1232,1233,1234,1235,1236,1237,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1275],"default":[15,18,19,40,41,42,43,818,819,820,836,837,838,839,843,844,846,847,848,889,890,891,900,901,908,909,913,914,915,916,917,920,921,922,923,930,933,934,935,940,941,948,949,950,951,965,967,968,970,971,980,981,982,983,986,987,988,997,1000,1001,1002,1007,1009,1010,1019,1021,1022,1025,1027,1030,1033,1034,1037,1038,1041,1043,1045,1046,1047,1056,1058,1059,1063,1066,1068,1069,1070,1071,1072,1074,1078,1086,1089,1091,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1173,1174,1176,1177,1180,1182,1183,1184,1185,1186,1187,1188,1190,1191,1195,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],"final":[40,41,43,965,1000,1020,1021,1117,1246,1257,1272],"float":[40,41,42,43,817,818,819,820,821,822,825,826,834,836,837,850,869,875,891,900,901,924,930,933,937,940,941,949,956,965,968,980,981,983,1000,1001,1005,1006,1021,1039,1040,1041,1046,1047,1063,1065,1066,1068,1070,1071,1072,1079,1081,1085,1097,1105,1113,1114,1115,1116,1117,1173,1176,1177,1190,1192,1198,1206,1209,1210,1211,1212,1213,1214,1215,1216,1246,1254,1257,1260,1261,1262,1263,1264,1265,1266,1267],"function":[15,40,41,43,384,385,388,389,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,817,819,820,822,823,826,827,828,829,830,831,832,833,834,836,837,839,840,844,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1229,1232,1233,1234,1262,1265,1266,1267,1271,1272,1275],"import":[43,1229,1272,1275],"int":[40,41,42,43,383,384,385,476,818,819,820,821,822,823,836,837,838,839,840,843,844,846,847,848,850,869,875,889,890,891,913,914,915,916,917,920,921,922,923,928,929,935,941,950,952,957,965,970,971,976,982,983,987,988,991,992,993,996,997,1000,1001,1002,1007,1010,1019,1020,1021,1029,1030,1034,1035,1037,1038,1043,1044,1045,1048,1050,1051,1056,1058,1061,1063,1065,1066,1070,1079,1083,1084,1086,1089,1113,1114,1115,1116,1117,1161,1170,1173,1174,1175,1177,1178,1180,1182,1183,1184,1185,1186,1187,1188,1190,1195,1198,1199,1200,1201,1202,1203,1204,1205,1209,1211,1213,1214,1215,1216,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1260,1261],"long":[1198,1208],"new":[40,41,43,476,818,819,820,825,829,941,945,965,966,976,991,992,993,996,1000,1001,1002,1003,1030,1035,1037,1038,1039,1040,1046,1047,1048,1063,1066,1068,1070,1071,1072,1079,1081,1083,1085,1097,1099,1103,1104,1110,1112,1117,1161,1171,1172,1173,1174,1215,1216,1229,1235,1236,1246,1256,1260,1261,1262,1263,1264,1265,1266,1267,1272,1275],"public":[965,984],"return":[15,16,17,18,19,40,41,42,43,476,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,850,869,875,889,890,891,900,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,926,927,929,930,934,935,936,937,938,940,941,945,946,947,948,949,950,951,952,953,954,955,956,957,964,965,966,967,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1034,1035,1036,1037,1038,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1229,1235,1236,1246,1255,1256,1262,1266,1271,1272,1275],"short":[1198,1208,1229,1275],"static":[40,41,889,890],"super":1117,"true":[40,41,42,427,433,460,463,476,477,825,830,836,837,843,844,846,847,848,889,890,891,965,967,975,977,995,1000,1009,1011,1059,1060,1063,1066,1068,1069,1070,1071,1072,1074,1086,1089,1113,1114,1115,1116,1117,1161,1162,1169,1173,1174,1180,1182,1183,1184,1185,1186,1187,1188,1190,1191,1198,1206,1211,1212,1213,1214,1217,1218,1219,1223,1246,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],"try":[40,41,965,1057,1117],"var":[40,41,1113,1114,1115,1275],"while":[40,41,42,1117],AND:[825,827,846,847,1094,1095],But:1275,For:[43,825,826,965,968,979,1048,1063,1069,1077,1086,1091,1097,1098,1229,1235,1236,1272,1275],Its:[1097,1101],NOT:[825,833],Not:817,One:[40,41,43,965,992,1035,1173,1175,1275],Ones:[1229,1237],PRs:43,Such:[965,984],That:1272,The:[15,16,17,18,19,40,41,42,43,825,826,827,828,830,832,834,836,837,838,839,843,844,846,847,848,850,869,875,889,890,891,900,901,907,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,930,933,934,935,936,937,940,941,945,946,947,952,953,954,955,964,965,968,972,973,976,977,980,981,982,983,985,986,989,990,994,997,1000,1002,1003,1010,1013,1014,1015,1017,1019,1021,1023,1025,1027,1030,1031,1034,1035,1037,1038,1039,1040,1041,1044,1045,1046,1047,1048,1051,1059,1062,1063,1065,1066,1068,1070,1071,1072,1074,1077,1079,1081,1083,1085,1086,1089,1091,1092,1097,1098,1100,1101,1105,1106,1107,1108,1109,1111,1113,1114,1115,1116,1117,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1229,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1272,1275],There:[43,1229,1272],These:[43,1229],Used:[1161,1162,1169,1258,1259],Using:[1229,1230,1275],With:[40,41,1086,1089,1180,1182,1183,1184,1185,1186,1187,1188,1229,1271,1275],__array__:[965,972],__call__:[1246,1257,1258,1259],__del__:1117,__dict__:[1117,1272],__enter__:1117,__exit__:1117,__getitem__:1117,__getstate__:1117,__init__:[40,41,42,43,59,60,81,207,386,387,425,426,505,630,891,892,899,900,901,902,903,904,905,906,941,942,943,944,1063,1064,1117,1121,1128,1223,1224,1227,1228,1229,1232,1233,1234,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1275],__iter__:1117,__len__:1117,__next__:1117,__pow__:43,__repr__:1117,_assign_vari:1271,_axi:1117,_base:[1161,1162,1169],_compute_node_da_ratio:1117,_compute_node_strs_da:1117,_concat_unify_arrai:1117,_counter:1117,_cur_framework:[43,1117],_da_direct:1117,_da_directions_flip:1117,_da_step_tim:1117,_da_tim:1117,_da_tune_count:1117,_data:1117,_delta_da_dim_s:1117,_delta_sf:1117,_dict:1117,_dim_siz:1117,_first_da_tune_step:1117,_first_ns_tune_step:1117,_fn:1117,_forward:[1229,1271],_get_kalman_param:1275,_get_prior:1275,_get_some_model:1275,_handle_flat_arrays_in_out:43,_index:[1161,1162,1169],_input_queu:1117,_length:1117,_max_depth:1117,_max_node_dim_step_ratio:1117,_max_node_dim_step_s:1117,_max_split_factor_step_s:1117,_mean_unify_arrai:1117,_min_bas:[965,1047,1215,1216,1260,1261],_min_denomin:[965,1046],_min_node_dim_s:1117,_min_sf_tune_step:1117,_min_unit_node_tune_step:1117,_model:1275,_native_wrapp:43,_node_mapp:1117,_node_percent_mem:1117,_node_str:1117,_node_str_da_ratio:1117,_node_strs_da:1117,_node_strs_kei:1117,_node_strs_n:1117,_node_util:1117,_ns_step_tim:1117,_ns_time:1117,_ns_tune_count:1117,_num_nod:1117,_num_work:1117,_observed_config:1117,_output_queu:1117,_paramet:1271,_percent_mem_inc_per_sf:1117,_percent_mem_inc_per_unit_da_dim:1117,_percent_util_inc_per_unit_da_dim:1117,_ret_fn:1117,_safety_factor:1117,_save_dir:1117,_shift_da_split:1117,_shift_n:1117,_slice:1117,_step:[1262,1266],_sum_unify_arrai:1117,_timeout:1117,_tune:1117,_tune_da:1117,_tune_n:1117,_tune_step:1117,_unit_da_tune_count:1117,_unroll_step:1275,_with_node_mappig:1117,_worker:1117,_worker_class:1117,_worker_fn:1117,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,891,900,906,1117,1258,1259,1262,1266],abil:1229,abl:[40,41],about:[821,822,823],abov:[43,1173,1175],above_height:[40,41],abs:[287,427,551,677,836,837,965,1117],absolut:[40,41,965,966],abstractmethod:1117,accept:[15,43,1229],access:[40,41,43,1272],accord:[40,41,821,822,965,983,1002,1037,1038,1056,1061],accordingli:[836,837,846,847,848],accur:[59,386,425,426,891,903,904,905,906,941,1063,1223,1227,1237,1239,1240,1242,1243,1245],aco:[765,1097],acosh:[765,1097],across:[40,41,891,900,901,910,911,913,914,915,916,917,923,933,934,965,970,971,973,974,1117,1161,1165],activ:[1191,1192,1193,1194,1195,1196,1197,1229,1233,1234],actual:1272,adam:[1063,1065,1066,1070,1229,1262,1264,1271],adam_step:1063,adam_upd:1063,adapt:[1063,1071,1262,1265],add:[40,41,43,1117,1211,1212,1213,1214,1215,1216,1229,1260,1261,1272],add_fn_to_dict:1223,add_param:1223,added:[43,965,1046,1047,1268,1269],adding:[965,976],addit:[40,41,43,965,991,992,993,1215,1216,1246,1256],adher:43,adjac:[965,968],adopt:[965,984],affect:[965,968],affin:[1260,1261],after:[825,834,965,1019,1063,1066,1067,1068,1070,1071,1072,1079,1080,1215,1216,1262,1263,1264,1265,1266,1267,1275],after_1:[965,983,1061],after_n:[965,983,1061],again:43,against:[40,41,1086,1089,1180,1182,1183,1184,1185,1186,1187,1188],agnost:[43,1229,1271,1272],aim:1275,algebra:1086,algorithm:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253,1275],align:[40,41,43,965,976],aliv:[891,925,927,931,965,1004,1028,1032],all:[15,16,17,18,19,40,41,43,106,229,412,530,655,836,837,838,839,846,889,890,891,900,925,931,965,966,967,973,974,984,997,1004,1010,1032,1086,1091,1113,1114,1115,1116,1117,1161,1162,1163,1169,1170,1173,1174,1177,1180,1182,1183,1184,1185,1186,1187,1188,1198,1208,1229,1272,1275],all_depth:[40,41],all_equ:965,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1161,all_tru:[40,41],alloc:[891,1117],allow:[965,1020,1021,1022,1258,1259],allow_dupl:[965,1022],alon:[891,930,940,1117,1229],along:[40,41,43,476,836,837,838,839,843,844,846,847,848,891,914,915,916,917,920,921,922,923,935,965,982,987,988,997,1002,1019,1020,1021,1034,1045,1048,1051,1058,1086,1089,1113,1114,1115,1116,1117,1173,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188],alongsid:[1271,1272],alpha:[1190,1192],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,891,1117],also:[40,41,43,965,968,1063,1066,1113,1114,1115,1116,1161,1162,1163,1169,1170,1198,1207,1246,1256,1271],altern:1271,alwai:[40,41,43,1063,1069,1074],among:[40,41],amount:[891,937,1117,1229],angl:[1097,1098,1102],ani:[15,16,17,18,19,40,41,43,106,229,412,530,655,846,889,890,891,893,896,900,901,903,912,913,916,917,922,965,967,968,972,990,991,992,993,994,995,1009,1017,1022,1046,1047,1063,1067,1117,1161,1162,1165,1169,1170,1171,1172,1173,1177,1229,1235,1236,1258,1259,1271,1272,1275],anoth:[40,41,43,941,947,1229],another_backend:43,anyth:[43,1275],anywai:43,apart:43,api:[1229,1230],appear:[965,996],append:[40,41,1117],appli:[15,18,19,40,41,825,833,965,991,992,993,1063,1070,1071,1086,1092,1094,1095,1096,1113,1114,1115,1161,1165,1168,1170,1190,1191,1192,1193,1194,1195,1196,1197,1198,1207,1209,1210,1215,1216,1229,1232,1233,1234,1260,1261],applic:[1161,1165,1170,1198,1209,1210,1229,1275],approxim:[43,825,826,850,875,1190,1191],arang:[126,287,427,476,551,677,965,1020,1021],arbitrari:[40,41,891,920,921,923,1117],arc:[1097,1102],arcco:[1097,1098],arctan:[1097,1101],area:[825,826,1229],arg:[15,16,17,40,41,43,59,63,891,900,913,917,923,935,965,991,992,993,1038,1117,1217,1218,1219,1223,1235,1236,1258,1259],arg_nam:965,arg_stateful_idx:[1217,1218,1219,1223,1258,1259],argmax:[126,427,551,677,965],argmin:[126,427,551,677,965],args_clon:1117,args_dist:1117,args_to_ivi:[15,1229],args_to_n:[15,1229],args_uni:1117,argsort:[103,226,409,527,652,843],argument:[15,16,17,18,19,40,41,42,43,59,63,889,890,891,900,901,913,917,923,965,968,969,977,990,1022,1038,1097,1098,1117,1161,1165,1235,1236,1258,1259],aris:[1229,1275],arithmet:[43,1180,1183,1186,1188],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:476,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,126,287,427,476,551,677,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,869,875,891,909,910,911,914,915,916,917,920,921,922,923,925,927,931,935,936,941,945,951,956,957,965,966,967,968,970,971,973,974,975,976,978,979,980,981,982,983,985,986,987,988,991,992,993,994,996,997,998,999,1000,1001,1002,1003,1004,1007,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1023,1024,1025,1026,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1043,1045,1048,1049,1050,1051,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1065,1066,1069,1070,1074,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1117,1161,1163,1170,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1229,1230,1246,1254,1255,1257,1262,1266,1271,1272],arrang:[965,991],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,383,384,385,386,388,389,817,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848],array_api_methods_to_test:43,array_builtin:[43,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888],array_equ:[287,677,965],array_lik:[476,965,972],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,965],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1229],arraywithgener:[22,1229],arraywithgradi:[24,1229],arraywithimag:[26,1229],arraywithlinalg:[28,1229],arraywithlog:[30,1229],arraywithmath:[32,1229],arraywithmeta:[34,1229],arraywithrandom:[36,1229],arraywithreduct:[38,1229],arriv:[40,41,42],articl:1229,arxiv:1229,as_arrai:[40,41,965,1007,1043],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[425,427,436,891,909,941,948,949,950,951],as_tensor:427,as_vari:[40,41],as_zero:[40,41],asarrai:[427,965],asin:[765,1097],asinh:[85,391,509,634,825],aspect:[1079,1084],assert:[40,41,965,975,1117],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:965,associ:[43,1086,1093],assum:[1272,1275],astyp:[427,941],asynchron:[40,41,42],at_dev:[40,42,891,904,905],at_kei:[40,41],at_key_chain:[40,41],at_nod:1117,atan2:[765,1097],atan:[765,1097],atanh:[765,1097],attent:[43,1198,1209,1210,1246,1257],attribut:[0,6,40,41,821,822,823,965,1031,1062],audienc:[1229,1272],author:1229,avail:[40,41,43,891,926,928,929,938,965,992,1117],averag:[1063,1065,1066,1070,1113,1114,1115,1180,1183],average_across_step:[1113,1114,1115],avoid:[891,1117,1272],axes:[40,41,43,427,457,469,470,836,837,838,839,840,846,847,848,891,935,965,970,971,983,996,997,1050,1056,1061,1086,1089,1117,1180,1182,1183,1184,1185,1186,1187,1188],axes_length:[40,41,965,991,992,993],axi:[40,41,427,429,430,434,435,441,449,450,451,456,458,836,837,838,839,840,843,844,846,847,848,891,893,896,903,914,915,916,917,920,921,922,923,935,965,970,971,982,983,986,987,988,996,997,1002,1019,1020,1021,1034,1045,1048,1050,1051,1058,1061,1117,1173,1179,1180,1182,1183,1184,1185,1186,1187,1188,1190,1195,1211,1213,1214],axis0:[40,41,965,1050],axis1:[40,41,965,1050],back:[43,1258,1259,1262,1266],backend:[15,17,19,40,41,383,384,385,386,388,389,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,891,926,929,938,941,947,955,964,965,1012,1016,1063,1066,1068,1070,1071,1072,1077,1117,1229,1230,1235,1236,1262,1263,1264,1265,1266,1267,1271,1272,1275],backend_nam:43,background:[1229,1272],backprop:1275,backward:[846,847,848,1271],band:[965,1000],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,386,425,426,427,451,850,875,891,893,894,895,896,897,898,900,901,903,904,905,906,941,965,1005,1021,1039,1047,1063,1117,1180,1181,1223,1227,1229,1232,1233,1234,1237,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1275],batch:[40,41,836,837,891,933,934,965,997,1000,1010,1079,1083,1086,1092,1113,1114,1115,1116,1117,1198,1207,1215,1216,1260,1261],batch_shap:[427,443,965,997,1010,1029,1079,1080,1081,1082,1083,1084,1085,1086,1093,1173,1174,1198,1208,1209,1210,1246,1255],batch_siz:[476,477,1117,1173,1174,1198,1199,1200,1201,1202,1203,1204,1205],bayesian:1275,becaus:[43,965,968],becom:[965,979,1097,1102,1275],been:[965,991,992,993,1173,1174],befor:[40,41,43,891,935,1113,1114,1115,1117,1161,1170,1180,1182,1183,1184,1185,1186,1187,1188,1198,1209,1210,1275],before_1:[965,983,1061],before_n:[965,983,1061],begin:[1161,1162,1169,1272],behaviour:[43,1275],behind:[1063,1066,1068,1070,1071,1072,1229],being:[40,41,43,965,968,1033,1041,1117],belong:[40,41],below:[43,1229,1272,1275],below_depth:[40,41],benefit:1229,bernoul:[1198,1206,1246,1254],best:[43,965,1022,1229],beta1:[1063,1065,1066,1070,1262,1263,1264],beta2:[1063,1065,1066,1070,1262,1263,1264],beta:[1215,1216],between:[40,41,42,821,822,965,968,1086,1091,1161,1165,1173,1175,1211,1213,1214,1262,1264],bia:[1198,1207,1208,1246,1247,1248,1249,1250,1251,1252,1253,1256],bias_initi:[1246,1247,1248,1249,1250,1251,1252,1253,1256],bilinear:[1079,1080],bilinear_resampl:[161,341,465,593,750,1079],bilinearli:[1079,1080],binari:[825,827,1211,1212],binary_cross_entropi:1211,bit:[386,821,822,823,941,952,1079,1081,1085,1229],bitwis:[825,827],bitwise_and:[85,211,391,509,634,825],bitwise_oper:[0,7,8],block:[1229,1272],bool:[15,18,19,40,41,42,43,825,830,832,836,837,843,844,846,847,848,850,869,889,890,891,909,922,926,930,935,938,940,941,951,965,967,973,974,987,990,994,995,1000,1007,1009,1017,1022,1043,1045,1058,1059,1060,1063,1066,1067,1068,1069,1070,1071,1072,1074,1086,1089,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1173,1174,1180,1182,1183,1184,1185,1186,1187,1188,1190,1191,1198,1206,1235,1236,1246,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],both:[43,965,986],bottom:1229,boundari:[40,41,1173,1177],branch:[43,889,890],brittl:43,broadcast:[40,41,43,825,827,836,837,846,847,848,850,869,875,965,976,994,1024,1025,1026,1034,1086,1089,1097,1102,1105,1180,1182,1183,1184,1185,1186,1187,1188],broadcast_to:[287,677,965],build:[1117,1229,1246,1257,1258,1259],build_mod:[1246,1257,1258,1259],builder:1229,built:[891,965,968,1117,1246,1257,1258,1259],builtin:43,builtin_ab:[242,850],builtin_add:[242,850],builtin_and:[242,850],builtin_bool:[242,850],builtin_contain:[242,850],builtin_deepcopi:[242,850],builtin_dir:[242,850],builtin_eq:[242,850],builtin_float:[242,850],builtin_floordiv:[242,850],builtin_g:[242,850],builtin_getattr:[242,850],builtin_getattribut:[242,850],builtin_getitem:[242,850],builtin_gt:[242,850],builtin_int:[242,850],builtin_invert:[242,850],builtin_l:[242,850],builtin_lt:[242,539,664,850],builtin_mul:[242,850],builtin_n:[242,850],builtin_neg:[242,850],builtin_or:[242,850],builtin_po:[242,850],builtin_pow:[43,242,850],builtin_radd:[242,850],builtin_rand:[242,850],builtin_rfloordiv:[242,850],builtin_rmul:[242,850],builtin_ror:[242,850],builtin_rpow:[242,850],builtin_rsub:[242,850],builtin_rtruediv:[242,850],builtin_rxor:[242,850],builtin_setitem:[242,850],builtin_some_op:43,builtin_sub:[242,850],builtin_truediv:[242,850],builtin_xor:[242,850],bypass:1272,cach:[891,907,965,977],cache_fn:965,calcul:[40,41,42,43,825,826,834,850,875,1097,1105],call:[43,891,935,965,1033,1041,1057,1063,1067,1117,1161,1162,1165,1169,1246,1257,1258,1259,1262,1266,1272,1275],callabl:[40,41,889,890,891,900,901,935,965,977,990,992,1022,1057,1113,1114,1115,1116,1117,1161,1165,1166,1167,1169,1170,1198,1209],can:[43,891,933,934,935,965,1035,1079,1081,1117,1229,1271,1272,1275],cancel_join_thread:1117,captur:1229,cast:[40,41,126,287,427,551,677,941,965,982,1079,1081,1085],catch_except:[965,990],categori:43,caus:43,ceil:[287,427,677,965,968],cell:[1198,1208,1246,1255],certain:[40,41,965,968,1020,1021],chain:[40,41,1113,1114,1115,1268,1269],chang:[43,891,965,1035,1117,1161,1163,1170,1229,1271],channel:[965,1000,1079,1081,1082,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256],check:[15,16,17,18,19,40,41,43,891,930,940,941,946,955,964,965,975,995,1009,1017,1049,1059,1063,1069,1117,1161,1162,1169,1229,1272],check_nest:[1161,1169],check_shap:[40,41],check_submod_ret:[1258,1259],check_typ:[40,41],choic:[1229,1272],choleski:[754,1086],choos:[965,1060,1086,1091,1097,1102,1229],choose_random_framework:59,chosen:[40,41,965,968,1060],chunk:[891,933,934,935,1117],chunk_siz:[891,935,1117],circl:[1097,1098,1100],clark:1229,clear:[891,907,1117],clear_framework_stack:59,clear_mem_on_dev:[425,669,891],click:1229,clip:[40,41,287,427,677,965,980,981,1024,1026,1229],clip_matrix_norm:965,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,965],clipped_delta:1117,clone:[40,41,891,910,911,912,913,1117],clone_arrai:1117,clone_it:1117,clone_nest:1117,clonedit:1117,cloneditem:1117,clonednest:1117,close:[43,1079,1084,1097,1100,1117,1275],closest:[941,946],closest_valid_dtyp:941,code:[40,41,42,43,476,1229,1230,1271,1272],codebas:[891,933,934,1117,1229,1272,1275],codomain:[825,826,834],collect:[15,40,41,425,427,460,465,469,473,474,476,850,889,891,941,965,1063,1079,1086,1094,1097,1117,1161,1173,1180,1190,1198,1211,1215,1232,1246,1260,1262],color:[40,41,42,1273,1274],column:[965,1010],combin:[40,41,42,1079,1084,1229,1275],combined_batch_s:1117,come:1272,command:1229,comment:43,commit:1275,common:[40,41,43,1097,1102],common_key_chain:[40,41],commun:[43,1229,1272],compar:[40,41,965,967,973,974],comparison_oper:[0,9,10],compat:[43,825,827,836,837,846,847,848,850,869,875,965,994,1035,1097,1105,1229,1275],compil:[287,427,677,1218,1219,1223,1229,1258,1259,1262,1263,1264,1265,1266,1267],compile_graph:[1217,1229,1258,1259,1262,1266],compile_on_next_step:[1258,1259,1262,1263,1264,1265,1266,1267],complet:[40,41,1086,1091,1117],complex:[1272,1275],compon:[965,986],composit:43,comput:[40,41,825,827,828,832,833,836,837,850,869,891,935,965,980,981,987,988,994,1023,1063,1065,1066,1067,1068,1070,1071,1072,1074,1076,1079,1082,1086,1087,1088,1089,1090,1091,1094,1095,1096,1097,1098,1100,1101,1102,1106,1107,1108,1109,1111,1161,1165,1180,1181,1182,1183,1184,1185,1186,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1207,1209,1211,1212,1213,1214],concat:[40,41,891,920,921,922,923,935,965,1000,1117],concaten:[40,41,126,287,427,551,677,965,1000,1117,1229],concatten:[40,41,891,920,921,922,923,935,1117],condit:[427,889,890,965,1060,1161,1169],conditon:[1161,1169],config:[40,41,1117],config_list:1117,configur:[40,41],conflict:43,conform:43,conjunct:1272,connect:[1223,1246,1256,1257],consid:[40,41,1086,1091,1271,1275],consist:[40,41,891,923,1117,1180,1181,1258,1259,1272],constant:[891,900,901,965,983,1117,1161,1165,1211,1212,1213,1214,1215,1216,1237,1238,1242,1245,1258,1259,1260,1261,1272],constant_kwarg:1117,constant_pad:[287,427,551,677,965],constitu:[40,41],construct:[965,1051,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271],constructor:[40,41,42,965,969,1268,1269],consum:[891,1117],cont_feat_dim:[1198,1209],contaienr:[40,41],contain:[15,18,19,42,43,818,819,820,825,826,827,830,832,834,836,837,843,844,846,847,848,850,869,875,891,910,914,935,941,945,965,966,970,971,979,980,981,984,994,1009,1024,1026,1036,1046,1047,1063,1065,1066,1068,1070,1071,1072,1097,1105,1113,1114,1115,1116,1117,1173,1174,1180,1182,1183,1184,1186,1188,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[427,677,965],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[427,965,1027,1198,1209,1246,1257],context_dim:[1246,1257],contextmanag:[59,60],continu:[43,1117,1272],contract:[40,41,1180,1181],contribut:[1229,1230],contributor:[43,1229],control:1229,conv1d:[192,372,490,807,1198,1229,1246],conv1d_transpos:[192,372,490,807,1198],conv1dtranspos:[1229,1246],conv2d:[192,372,490,619,807,1198,1229,1246],conv2d_transpos:[192,372,490,807,1198],conv2dtranspos:[1229,1246],conv3d:[192,372,490,619,807,1198,1229,1246],conv3d_transpos:[192,372,490,807,1198],conv3dtranspos:[1229,1246],convent:[40,41,1180,1181],conver:[891,907,918,930,937,940,1117],convers:[16,17,18,19,40,41,1117,1229],convert:[15,16,17,18,19,40,41,43,891,918,919,941,947,953,954,965,1044,1054,1055,1079,1081,1085,1086,1093,1117,1161,1163,1170,1229,1236],convert_dtyp:941,convolut:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],cool:43,cooler:43,coordin:[965,1025,1097,1098,1100,1102],copi:[40,41,476,965,985,1117,1161,1163],copy_arrai:[427,677,965],copy_nest:1161,core:[425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1229],corner:43,correct:[43,1229,1272],correctli:[40,41,1086,1089,1097,1102,1180,1182,1183,1184,1185,1186,1187,1188],correspond:[40,41,43,850,875,965,982,1173,1174],cos:[85,391,509,634,825,965,1000,1097,1098,1111,1272],cosh:[85,391,509,634,765,825,1097],cosin:[825,828,829,1097,1098,1099,1104],cost:[1063,1065,1066,1068,1070,1071,1072,1113,1114,1115,1116],cost_fn:[1113,1116],could:1275,count:[40,41,838,839,846,847,848,1117,1180,1185,1187,1227],cprint:1273,cpu:[40,41,43,891,928,930,936,937,940,965,968,972,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1062,1117,1173,1174,1175,1176,1177,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269,1271,1272],creat:[40,41,818,819,820,891,900,901,965,968,972,1001,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1053,1062,1063,1076,1117,1173,1174,1175,1176,1177,1229,1230,1235,1236,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1275],create_if_abs:[40,41],create_vari:1237,creation:[40,41,42,43],creation_funct:[383,384,385,818,819,820],crop:[1079,1083],crop_siz:[1079,1083],cross:[287,677,965,1211,1212,1213,1214],cross_entropi:1211,cuda:[40,41,891,900,919,936,965,968,972,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1062,1117,1173,1174,1175,1176,1177,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269],cumprod:[126,287,427,677,965],cumsum:[677,965],cumul:[965,987,988],current:[40,41,42,43,891,900,924,925,927,931,941,947,955,964,965,989,1004,1012,1016,1028,1032,1117,1161,1162,1169,1229,1275],current_framework:59,current_framework_str:[427,677,965,1117],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1223,d_in:[1198,1199,1200,1201,1202,1203,1204],d_out:[1198,1199,1200,1201,1202,1203,1204],da_can_termin:1117,da_dim_s:[891,1117],da_direct:1117,da_tune_step:[891,1117],dai:1275,daniel:1229,data:[40,41,42,43,818,819,820,822,823,825,826,827,830,832,834,836,837,838,839,840,846,847,848,850,869,875,891,893,894,895,896,897,898,903,904,905,919,941,945,946,947,951,952,953,954,955,956,957,964,965,968,972,994,1001,1010,1017,1030,1031,1035,1049,1062,1063,1069,1077,1097,1105,1117,1198,1207,1229],data_format:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],data_type_funct:[386,388,389,821,822,823],dataset:[40,41],datatyp:[40,41,941,946,956,957],dcdw:[1063,1065,1066,1068,1070,1071],debug_info:1223,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1063,1070,1071,1262,1264,1265],decay_lambda:[1063,1070,1071,1262,1264,1265],decid:[40,41,1275],decompos:[1086,1087,1091],decomposit:[1086,1087,1091,1092],decor:43,decrement:[965,1013],dedic:[1063,1077,1235,1236],deep:[40,41,1229],deep_copi:[40,41],deeper:[891,913,917,923,1117,1161,1170,1229],deepli:[1161,1163],def:[43,60,81,207,387,505,630,892,899,902,942,943,944,1064,1117,1121,1128,1224,1228,1229,1238,1241,1244,1271,1272,1275],default_dev:43,default_devic:891,default_dtyp:[43,941],default_float_dtyp:941,default_int_dtyp:941,default_key_color:[40,41,42],default_nod:1117,default_rng:476,default_v:[965,990],defaultdevic:[891,892],defaultdtyp:[941,942],defaultfloatdtyp:[941,943],defaultintdtyp:[941,944],defer:43,defin:[43,965,986,1029,1031,1062,1173,1175],degre:[825,828,1097,1109,1111],del:1117,delta:[1063,1065,1117,1223],delta_dim_s:1117,delta_percent_mem:1117,delta_sf:1117,delta_util:1117,demo:1229,denomin:[965,999,1006,1040,1046,1047,1215,1216,1260,1261],dens:[1246,1256],depend:[43,825,826,850,875,965,1060,1086,1092,1229],depth:[40,41,427,452,891,913,917,923,965,1008,1029,1117,1161,1170,1223,1227,1258,1259],depth_cutoff:[40,41],depthwis:[1198,1205,1246,1253],depthwise_conv2d:[192,372,490,619,807,1198],depthwiseconv2d:[1229,1246],deriv:[1063,1065,1066,1068,1070,1071,1072,1161,1163,1170,1229,1258,1262,1266,1268],descend:[843,844,1086,1092],descent:[1063,1068,1262,1267],describ:[40,41,1180,1181],descript:[836,837],design:[1229,1230],desir:[40,41,891,936,941,945,965,968,972,1010,1011,1030,1031,1062,1079,1084,1117,1180,1182,1183,1184,1186,1188],desired_aspect_ratio:[465,468,1079,1084],desired_percent_increas:1117,detail:1275,detect:[40,41,1161,1162,1169],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,825,826,827,830,834,836,837,846,847,848,850,875,891,926,928,929,938,941,945,946,952,955,956,957,964,965,967,968,972,973,974,1009,1012,1016,1017,1049,1059,1063,1069,1097,1105,1113,1114,1115,1116,1117,1198,1209],dev:[40,41,42,43,119,281,425,427,428,431,441,442,443,450,451,452,453,454,455,459,476,477,544,669,891,894,895,897,898,900,901,904,905,907,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,930,931,932,933,934,935,936,937,940,965,968,972,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1062,1063,1078,1173,1174,1175,1176,1177,1235,1236,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269],dev_clon:[40,41,891],dev_clone_arrai:891,dev_clone_it:891,dev_clone_nest:891,dev_dist:[40,41,891],dev_dist_arrai:891,dev_dist_it:891,dev_dist_nest:891,dev_from_str:[43,119,281,425,544,669,891],dev_mapp:891,dev_str:[40,41],dev_to_str:[119,281,425,544,669,891],dev_unifi:891,dev_unify_arrai:891,dev_unify_it:891,dev_unify_nest:891,dev_util:891,devclonedit:891,devcloneditem:891,devclonednest:891,devdistit:891,devdistitem:891,devdistnest:891,develop:[43,1229,1272,1275],deviat:[40,41,1173,1176,1180,1186,1215,1216,1260,1261],devic:[21,40,41,43,383,384,385,426,427,440,818,819,820,893,894,895,896,897,898,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,965,968,972,1001,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1062,1063,1078,1173,1174,1175,1176,1177,1229,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269],devmanag:[891,899],devmapp:[891,901],devmappermultiproc:891,diag:[1086,1092],diagon:[965,1010],dict:[15,16,17,18,19,40,41,42,891,893,896,900,901,903,913,914,915,916,917,965,991,992,993,1022,1113,1114,1115,1117,1161,1163,1164,1165,1168,1170,1235,1236],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,821,822,891,910,911,914,915,1086,1091,1117,1198,1207,1229,1272,1275],differenti:[1229,1272],dilat:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],dim:[40,41,43,965,1029,1079,1080,1084,1086,1092,1117,1246,1257],dim_siz:[40,41,891,1117],dimens:[40,41,42,836,837,838,839,840,846,847,848,891,922,965,976,982,986,991,992,993,996,1000,1007,1019,1029,1034,1035,1045,1048,1056,1058,1079,1083,1086,1089,1092,1113,1114,1115,1116,1117,1173,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1195,1198,1199,1200,1201,1202,1203,1204,1205,1208,1211,1213,1214,1246,1247,1248,1249,1250,1251,1252,1253,1256,1257],dimension:[40,41,476,836,837,846,847,848,965,1045,1086,1092],direct:1117,directli:[43,1161,1170,1272,1275],directori:[965,1042,1052],discret:[1211,1213],disk:[40,41,1079,1081],distanc:[965,968],distribut:[40,41,891,910,914,915,916,917,1117,1173,1174,1175,1176,1177,1198,1206,1246,1254,1258,1259],distribute_nest:1117,distributedarrai:[40,41],distrubt:[1211,1213],dive:[1229,1272],divid:[40,41,965,1045,1046,1097],dividend:[1097,1105],divis:[965,999,1006,1040,1046,1047,1063,1065,1066,1070,1097,1105,1262,1263,1264],divisor:[1063,1065,1066,1070,1097,1105,1262,1263,1264],doc:1229,docstr:43,doe:[40,41,43,965,968,1045,1271],doesn:[1086,1091,1229],doing:43,domain:[825,826,834,1097,1098],don:1229,done:43,door:1275,dot:[1086,1088,1198,1209,1210,1246,1257],down:1271,downscal:[965,980,981],drag:[1229,1275],draw:[1173,1174,1176,1177],drawn:[1173,1174,1175,1176,1177],drop:[1229,1275],dropout:[1198,1229,1246,1257],dropout_r:[1246,1257],ds_tune_step:891,dtype:[40,41,43,126,287,383,384,385,386,388,389,427,428,431,432,440,443,453,459,551,677,818,819,820,821,822,823,945,946,947,948,949,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,968,972,1001,1010,1029,1030,1031,1062],dtype_bit:[126,287,427,551,677,941],dtype_from_str:[43,126,287,427,551,677,941],dtype_in:[427,437,438,439,941,947,952,953,954,955,956,957,964],dtype_to_str:[126,287,427,551,677,941],duplic:[40,41],dure:[40,41,43,889,890,965,1057,1063,1065,1066,1070,1113,1114,1115,1116,1258,1259,1262,1263,1264,1266],dynam:[427,433,889,890],each:[40,41,42,43,825,826,827,830,832,834,843,844,850,869,875,891,900,901,910,911,912,913,914,915,916,922,934,935,965,966,967,983,994,1034,1045,1048,1051,1061,1063,1066,1068,1070,1071,1072,1079,1082,1086,1092,1097,1100,1105,1107,1108,1117,1161,1165,1173,1174,1180,1181,1198,1199,1200,1201,1202,1203,1204,1205,1206,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272],eager:1272,easi:1275,easili:1229,econom:1275,ecosystem:1229,edg:[965,979,983,1061],effect:[1063,1072],effective_grad:[1063,1072],effici:1275,einop:[40,41,965,991,992,993],einops_rearrang:[40,41,965],einops_reduc:[40,41,965],einops_repeat:[40,41,965],einstein:[40,41,1180,1181],einsum:[40,41,178,360,478,609,787,1180],either:[40,41,43,965,990,1022,1025,1027,1113,1114,1115,1116,1117,1246,1257,1258,1259,1272],eleg:1117,element:[40,41,43,476,825,826,827,828,829,830,832,833,834,838,839,840,843,844,846,847,848,850,869,875,891,912,916,922,941,945,965,966,968,970,971,973,974,978,979,980,981,987,988,994,997,998,999,1010,1011,1024,1026,1034,1036,1045,1055,1060,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1117,1180,1181,1183,1185,1187,1190,1191,1192,1193,1194,1195,1196,1197,1198,1206,1246,1254],elementwis:[40,41],elementwise_affin:[1260,1261],elementwise_funct:[825,826,827,828,829,830,831,832,833,834],elemtn:[1173,1174],elif:1117,els:[965,975,990,995,1117],elsewher:[965,1060],emphas:1229,empti:[40,41,1086,1091,1117],enabl:[40,41,42,43,1229],encapsul:[821,823],encod:[965,1000,1079,1081],end:[965,968,1229,1272],ensur:43,entir:[40,41,846,847,848,891,935,1117,1229,1246,1255],entri:[40,41,965,997,1020,1021,1045],entropi:[1211,1212,1213,1214],enumer:1117,environ:1229,eps:[386,821,822],epsilon:[1063,1065,1066,1070,1211,1212,1213,1214,1215,1216,1260,1261,1262,1263,1264],equal:[40,41,427,551,677,825,828,830,965,967,973,974,983,1045,1061,1097,1109,1111,1173,1177],equality_matrix:[965,967],equat:[40,41,1180,1181],equival:[836,837,965,968,1097,1111],erf:[474,765,1097],error:[40,41,43,891,1097,1106,1117,1190,1191,1258,1259,1262,1266],essenti:43,etc:[40,41,43,891,936,965,968,972,1002,1003,1010,1020,1021,1029,1030,1031,1037,1038,1062,1117,1173,1174,1175,1176,1177,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269,1275],euclidean:[836,837],euler:817,evalu:[40,41,846,847,848,965,1025,1161,1162,1169],even:[43,1275],evenli:[40,41,965,968,1020,1021,1045],everi:[965,967,1275],exact:[40,41],exampl:[43,889,890,965,979,1048,1086,1091,1229,1271,1272,1275],example_input:[427,433,889,890],exc_tb:1117,exc_typ:1117,exc_val:1117,exce:[965,1026],except:[40,41,44,47,846,847,848,965,968,975,982,990,1057,1117],excess_s:1117,excit:[1229,1272],exclud:[59,61,965,968,1173,1177],exclus:[40,41,427,435,448,460,462,965,987,1017,1063,1069,1173,1175],execut:[43,965,1057,1272],execute_with_gradi:[158,336,460,588,744,1063,1229,1271],exist:[40,41,965,990,1117,1229,1262,1266,1275],exp:[765,1097],expand:[40,41,965,996,1000],expand_dim:[40,41,287,677,965,1117],expect:[965,969],explain:[43,1272],explicitli:[43,1246,1255,1257,1258,1259,1272],expon:[43,850,875,965,1047],exponenti:[43,850,875,1097,1106,1107],expos:[965,972,984],express:[965,1025],exsit:[40,41],extend:43,extra:[40,41,42,1063,1067],eye:[1086,1088],fabian:1229,fabio:1229,factor:[891,900,933,934,935,1063,1065,1066,1070,1071,1086,1092,1117,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253,1262,1263,1264,1265],fail:43,falck:1229,fall:[1258,1259,1262,1266],fallback_to_non_compil:[1258,1259,1262,1266],fals:[15,18,19,40,41,42,59,66,67,68,69,70,425,427,435,436,448,456,458,460,461,462,469,470,825,830,836,837,843,844,846,847,848,891,909,922,930,935,940,941,948,949,950,951,965,967,987,990,995,1000,1007,1017,1022,1043,1045,1058,1060,1063,1066,1067,1068,1069,1070,1071,1072,1086,1089,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1180,1182,1183,1184,1185,1186,1187,1188,1217,1218,1219,1223,1227,1235,1236,1258,1259,1262,1263,1264,1265,1266,1267],fan_in:1237,fan_mod:1237,fan_out:1237,far:[1161,1162,1169,1271],faster:[889,890],favourit:[1229,1271],feasibl:1275,feat_dim:[1198,1209,1210],fed:[891,935,1117],feed:[891,935,1117],few:43,field:1275,file:[40,41,43,965,1042,1052,1258,1259],filepath:[40,41],fill:[40,41,818,819,820,965,1001,1030,1173,1175],fill_valu:[427,440,965,1001],filter:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253,1275],filter_s:[1246,1247,1248],filter_shap:[1246,1249,1250,1251,1252,1253],find:[40,41,1275],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,206,207,386,387,504,505,629,630,821],finish:[1229,1275],finit:[825,830],first:[40,41,43,476,825,827,889,890,891,922,965,973,982,986,994,1020,1021,1048,1050,1063,1067,1086,1092,1113,1114,1115,1116,1117,1161,1162,1169,1173,1179,1180,1185,1187,1246,1257,1258,1259,1262,1266,1272,1275],firstlayersiren:[1229,1237],firstli:[1272,1275],fist:[891,935,1117],fit:[40,41,425,427,460,465,469,473,474,476,965,1034,1079,1084],fix:43,fkt:1275,flag:[40,41,43,1063,1069],flat:[40,41,43,965,1034,1037],flat_list:[40,41],flatten:[40,41,836,837,965,1000,1034,1180,1182,1183,1184,1186,1188],flatten_key_chain:[40,41,1258,1259],flexibl:[1229,1272],flip:[40,41,98,221,404,522,647,838,965],float32:[43,427,443,941,945,953,954,965,968,972,1010,1030,1031,1062],float_dtyp:[941,949,959],float_img_to_uint8_img:1079,floor:[287,427,677,965,999,1117],floormod:[287,427,677,965],fluid:1275,fname:[1217,1219,1223,1258,1259],folder:[43,1229],follow:[40,41,43,821,823,836,837,891,935,965,1013,1014,1015,1046,1047,1063,1066,1068,1070,1071,1072,1117,1161,1165,1170,1198,1209,1210,1229,1246,1256,1262,1266],followng:[821,822],fomaml_step:1113,forget:[1063,1065,1066,1070,1262,1263,1264],fork:[965,1027,1229,1230],forkserv:[965,1027,1117],form:[15,16,17,18,19,40,41,965,972,1063,1066,1068,1070,1071,1072,1161,1163,1170,1198],format:[40,41,43,891,909,941,945,947,951,965,968,972,1010,1030,1031,1062,1117,1180,1181,1229,1271,1272],format_fn:[40,41],format_key_chain:[40,41],forward:[1258,1259,1262,1266,1271],found:[40,41,42],fourier:[965,1000],fourier_encod:965,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,99,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,168,172,173,174,175,176,177,179,180,181,182,183,184,185,188,190,191,193,194,195,196,197,198,199,204,205,207,208,209,212,213,214,215,216,217,220,222,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,342,343,344,346,347,348,349,350,352,353,356,357,358,359,361,362,363,364,365,366,367,368,371,373,374,375,376,377,378,379,384,385,387,388,389,392,393,394,395,396,397,398,399,400,403,405,406,410,413,414,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,466,467,468,470,471,472,475,477,479,480,481,482,483,484,485,488,489,491,492,493,494,495,496,497,502,503,505,506,507,510,511,512,513,514,515,516,517,518,521,523,524,528,531,532,540,545,546,547,548,549,550,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,589,590,591,592,594,595,596,598,599,600,601,605,606,607,608,610,611,612,613,614,615,616,620,621,622,627,628,630,631,632,635,636,637,638,639,640,641,642,643,646,648,649,653,656,657,665,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,745,746,747,748,749,751,752,753,755,756,757,758,759,760,761,763,764,766,767,768,769,770,771,772,773,774,775,776,777,778,779,781,782,783,784,785,786,788,789,790,791,792,793,794,797,798,799,800,801,802,803,805,806,808,809,810,811,812,813,814,819,820,822,823,825,826,827,828,829,830,831,832,833,834,837,839,840,844,847,848,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1216,1218,1219,1221,1222,1224,1228,1229,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1274,1275],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1117,framewrk:[965,1027],freeli:43,frequenc:[965,1000],from:[40,41,42,43,825,832,834,838,839,840,846,847,848,891,900,901,935,941,947,965,990,997,1002,1003,1010,1035,1053,1060,1063,1066,1070,1079,1083,1086,1091,1113,1114,1115,1116,1117,1161,1163,1170,1173,1174,1175,1176,1177,1180,1185,1187,1198,1206,1209,1229,1235,1236,1246,1254,1257,1262,1266,1271,1272],from_cal:[1258,1259],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[126,287,427,551,677,821,822,965,1086,1091,1229],full_matric:[1086,1092],fulli:[43,1229,1246,1256,1257,1271],func:[40,41,427,433,460,461,889,890,891,935,965,977,1063,1067,1117],further:[43,1275],furthermor:1275,futur:1275,gain:1237,gamma:[1215,1216],gather:[40,41,126,287,427,551,677,965,1003],gather_nd:[40,41,126,287,427,551,677,965],gauss:[1097,1106],gaussian:[1190,1191],geglu:[1229,1232],gelu:[370,487,796,1190,1229,1232],gener:[23,40,41,43,425,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,476,889,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1069,1173,1175,1177,1178,1229,1262,1266],geometr:[965,1000],get:[40,41,43,821,822,823,891,900,901,909,924,925,930,934,937,940,941,951,952,965,969,1004,1005,1006,1033,1117,1227,1229,1246,1255,1275],get_all_arrays_in_memori:965,get_all_arrays_on_dev:891,get_framework:59,get_initial_st:[1246,1255],get_min_bas:965,get_min_denomin:965,get_mod_kei:[1258,1259],get_num_dim:[427,677,965],get_param:1223,get_param_recurs:1223,get_referrers_recurs:965,getfullargspec:1117,gist:1229,give:[43,843,844,965,1035,1272],given:[40,41,43,818,819,820,838,839,843,844,891,924,930,933,934,935,937,940,941,945,965,968,972,979,987,988,997,1003,1020,1021,1030,1031,1034,1037,1038,1045,1051,1056,1058,1062,1063,1065,1066,1068,1070,1071,1072,1086,1088,1093,1097,1098,1117,1161,1166,1167,1173,1176,1177,1179,1180,1183,1185,1186,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1235,1236,1275],global:[40,41,42,891,900,901,908,933,934,935,941,948,949,950,965,989,1005,1006,1033,1039,1040,1041,1046,1047,1063,1078,1117,1215,1216,1221,1222,1229,1260,1261],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1229,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256],got:[43,1229],gpu0:43,gpu2:43,gpu:[891,926,929,1117],gpu_is_avail:[425,891,1117],grad:[1229,1262,1266,1271],gradient:[25,40,41,461,462,463,464,891,935,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1082,1113,1114,1115,1116,1229,1262,1263,1264,1265,1266,1267,1271,1275],gradient_descent_upd:[1063,1113,1114,1115,1116],gradient_imag:[161,341,465,593,750,1079],gradienttrack:[1063,1064],graph:[1063,1066,1068,1070,1071,1072,1217,1218,1219,1224,1229,1258,1259],graph_compil:[1217,1218,1219,1220,1221,1222,1223,1227],greater:[40,41,838,840,965,968,998,1173,1177],green:[40,41,42,1273,1274],grid:[965,1025],group:[1079,1084],guid:[1229,1230,1275],gym:1229,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1275,half:[965,968,1117,1173,1177],hand:1229,handl:[40,41,42,43,889,890,891,907,909,918,919,930,937,940,1063,1066,1068,1070,1071,1072,1117,1262,1263,1264,1265,1266,1267],has:[40,41,43,838,840,965,1048,1086,1091,1097,1101],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,965],hasattr:1117,have:[40,41,43,821,822,825,826,827,830,832,834,836,837,838,839,840,846,847,848,850,869,875,965,982,986,991,992,993,994,1001,1048,1063,1069,1077,1086,1092,1097,1105,1117,1229,1271,1272],haven:43,hdf5:[40,41,1258,1259],head:[1198,1209,1246,1257],head_dim:[1246,1257],height:[1079,1084],height_cutoff:[40,41],help:[59,386,425,426,891,903,904,905,906,941,1063,1223,1227,1229,1237,1239,1240,1242,1243,1245],helper:1229,here:[43,1229],hidden:[1198,1208,1246,1255],hierarch:[965,984],hierarchi:[40,41],high:[40,41,476,1173,1175,1177],higher:[1063,1066,1068,1070,1071,1072,1086,1092],highest:[1173,1175],highest_util:1117,highest_util_nod:1117,highli:1229,highlight:1275,highlight_subgraph:[1217,1219,1223],hint:43,hkt:1275,hold:[941,945,965,968,972,1037,1038],host:1229,hot:[965,1029],how:[1229,1246,1257,1258,1259,1272,1275],howev:[43,1272],http:1275,hyperbol:[825,826,829,1097,1099,1103,1104,1110,1112,1190,1197],hypothet:1275,icon:1229,idea:1229,ident:[40,41,43,126,287,427,551,677,965],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[817,821,822,825,834],if_exist:[40,41],ignor:[40,41,1262,1266],ignore_key_error:[40,41],ignore_miss:[1262,1266],ignore_non:[40,41],iinfo:[80,206,386,504,629,821],imag:[27,466,467,468,965,1019,1080,1081,1082,1083,1084,1085,1198,1199,1200,1201,1202,1204,1205,1229,1275],image_dim:[1079,1083],imkkhk:1275,immedi:[1229,1272,1275],implement:[43,825,826,850,875,1229,1272,1275],in_featur:[1198,1207],inadvert:43,includ:[40,41,43,836,837,846,847,848,965,968,1009,1046,1047,1059,1161,1162,1173,1177,1246,1256,1257,1260,1261,1271],include_deriv:[1161,1163,1170],include_empti:[40,41],include_gener:[1217,1218,1219,1223,1258,1259],include_inf:[40,41,965,1009,1059],include_nest:[1161,1162],include_self:[40,41],inclus:[1173,1175],incom:[1198,1207],increas:[891,913,917,923,965,983,996,1061,1117,1161,1170],increasingli:1275,increment:[965,1014,1117],increment_param_count:1223,inde:1229,indent:[40,41,42],independ:[1173,1174],index:[40,41,427,476,965,970,971,1002,1003,1025,1048,1161,1164,1166,1167,1168,1171],index_nest:1161,indic:[40,41,427,441,442,452,454,455,836,837,843,844,965,970,971,1002,1003,1011,1029,1037,1038,1161,1162,1164,1166,1167,1168,1169,1171,1172,1173,1174,1190,1195,1198,1199,1200,1201,1202,1203,1204,1205,1215,1216,1246,1247,1248,1249,1250,1251,1252,1253,1258,1259],indices_wher:[126,287,427,677,965],indistinguish:[825,834],inevit:1275,inf:[40,41,836,837,965,1009,1018,1059,1097,1101],infer:[825,832,889,890,965,997,1007,1010,1035,1043,1079,1083,1086,1091,1272,1275],infin:[825,826,830,834,836,837,965,1018],infinit:[825,834],inform:[821,822,823,1063,1074],init_c:[1198,1208],init_h:[1198,1208],init_on_first_step:[1262,1266],initi:[40,41,42,59,386,425,426,891,903,904,905,906,941,1063,1117,1198,1208,1223,1227,1229,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1262,1266],initialz:[1258,1259],inner:[1113,1114,1115,1116],inner_batch_fn:[1113,1114,1115],inner_batch_shap:[1198,1207],inner_cost_fn:[1113,1114,1115],inner_grad_step:[1113,1114,1115,1116],inner_learning_r:[1113,1114,1115,1116],inner_optimization_step:[1113,1114,1115,1116],inner_v:[1113,1114,1115],inp:1117,inplac:[40,41,965,975,1012,1016,1049,1063,1066,1068,1070,1071,1072,1235,1236,1262,1263,1264,1265,1266,1267],inplace_arrays_support:[427,965],inplace_decr:[126,287,427,551,677,965],inplace_incr:[126,287,427,551,677,965],inplace_oper:[0,11,12],inplace_upd:[40,41,126,287,427,551,677,965,1235,1236],inplace_variables_support:[427,965],input:[15,18,19,40,41,42,43,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,889,890,891,900,901,908,909,910,913,914,917,923,935,936,941,945,946,948,949,950,951,952,956,957,965,966,967,970,971,973,974,975,976,978,979,980,981,982,983,985,987,988,990,991,992,993,994,995,996,997,998,999,1000,1007,1009,1010,1011,1013,1014,1015,1017,1018,1019,1023,1024,1025,1026,1034,1036,1043,1044,1048,1049,1050,1051,1053,1054,1055,1056,1058,1059,1061,1063,1067,1069,1074,1078,1079,1080,1081,1082,1083,1085,1086,1089,1091,1092,1094,1095,1096,1097,1099,1101,1103,1104,1105,1109,1110,1111,1112,1113,1114,1115,1116,1117,1173,1174,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1215,1216,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1260,1261,1272],input_ax:[891,935,1117],input_channel:[1246,1247,1248,1249,1250,1251,1252,1255,1256],input_queu:1117,inputs_split:1117,insert:[965,996],insid:43,inspect:1117,inspir:1275,instal:1229,instanc:[15,16,17,18,19,40,41,43,476,850,869,875,891,900,1117,1235,1236,1268,1269],instead:[40,41,476,1180,1182,1183,1184,1185,1186,1187,1188,1275],int32:43,int64:[941,945,965,968,972,1010,1030,1031,1062],int_dtyp:[941,950,960],integ:[40,41,476,821,823,825,827,836,837,846,847,848,941,957,965,968,978,998,1036,1045,1173,1175,1178],integr:1229,intend:43,inter:1229,interchang:[40,41,965,1050],interest:1229,interfac:[965,972,1272],intermedi:[40,41],intern:[40,41,891,1063,1077,1117,1161,1162,1169,1170,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1268,1269],interpol:[965,1019],intersect:[1097,1098],interv:[40,41,846,847,848,965,968,979,1020,1021,1097,1100,1173,1177],introduc:1275,inv:[754,1086,1275],invalid:[846,847,848],invalid_dtyp:941,invers:[825,826,1086,1088,1090,1097,1098,1099,1100,1101,1103,1275],invert:[1086,1088,1090],invest:1275,invoc:[889,890],irrespect:1229,is_al:1117,is_arrai:[126,287,427,551,677,965,1117],is_float_dtyp:941,is_int_dtyp:941,is_mean:1117,is_sum:1117,is_var:[1223,1227],is_vari:[158,336,460,588,744,1063],isfinit:[85,211,391,509,634,825],isinf:[287,551,677,965],isinst:1117,isnan:[85,211,391,509,634,825],isnumer:1117,issu:43,item:[15,19,40,41,850,862,863,891,900,901,903,910,912,914,916,922,941,948,965,984,1008,1046,1047,1117,1161,1165,1166,1167,1170,1171,1172,1229,1258,1259,1271],iter:[15,16,17,18,19,40,41,42,889,890,891,894,895,897,898,900,901,904,905,912,914,915,916,917,922,935,965,967,976,982,983,997,1010,1025,1030,1034,1035,1038,1043,1045,1048,1051,1056,1061,1117,1161,1162,1163,1165,1169,1170],iterbal:[891,912,916,922,1117],its:[476,843,844,891,935,965,1010,1035,1050,1056,1117,1229],itself:[43,1161,1170],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,383,384,385,386,388,389,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,817,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1227,1229,1230,1232,1233,1234,1235,1236,1237,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1273,1274],ivy_backend:[40,41],ivy_bay:1275,ivy_test:43,ivyfcmodel:1271,ivyh:[40,41,42],ivymodul:[189,804],jame:1229,jax:[43,1063,1069,1229,1275],jax_concat:1229,jnp:1229,join:[40,41,965,982,1048,1117],journal:1229,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1229,1246,1255,1275],kaimingnorm:[1237,1241],kalman:1275,kalman_filt:1275,kalman_filter_step:1275,kalman_filter_upd:1275,keep:[40,41,891,936,965,1058,1117,1229,1230,1275],keep_inner_v:[1113,1114,1115],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1113,1114,1115],keepdim:[40,41,427,458,469,470,836,837,846,847,848,965,1058,1086,1089,1180,1182,1183,1184,1185,1186,1187,1188],kei:[15,16,17,40,41,42,43,850,855,891,903,965,984,1113,1114,1115,1117,1161,1164,1168,1198,1209,1210,1229,1235,1236,1246,1257,1262,1266],kept:[40,41,42,1113,1114,1115],kera:1275,kernel:[1198,1208],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,891,900,901,913,917,923,965,969,991,992,993,1022,1117,1161,1165,1258,1259],keyword_color_dict:[40,41,42],kind:[821,822,823,1275],kwarg:[15,16,17,40,41,42,59,63,891,900,913,917,923,965,1022,1117,1217,1218,1219,1223,1235,1236,1258,1259],kwarg_stateful_idx:[1217,1218,1219,1223,1258,1259],kwargs_clon:1117,kwargs_dist:1117,kwargs_uni:1117,label:[43,1211,1212,1213,1214],lamb:[1063,1070,1229,1262],lamb_upd:1063,lambda:[1117,1262,1265,1267,1271],lar:[1063,1070,1071,1229,1262],larger:[821,822,965,979],largest:[40,41,821,822,823,965,970,998],lars_upd:1063,last:[40,41,838,839,846,847,848,965,968,986,1019,1045,1048,1086,1089,1092,1180,1185,1187,1190,1195,1198,1208,1246,1256],later:[40,41,965,977],latest:[1246,1255],layer:[1063,1066,1068,1070,1072,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1215,1216,1229,1237,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269,1275],layer_norm:1215,layernorm:[1229,1260],layerwis:[1063,1071,1262,1265],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1161,1162,1169],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1190,1191,1192],leaky_relu:[796,1190],learn:[825,832,1063,1066,1068,1070,1071,1072,1086,1091,1113,1114,1115,1116,1173,1179,1229,1262,1263,1264,1265,1266,1267,1272,1275],learnabl:[1215,1216,1260,1261],leav:[15,18,19,40,41,1161,1162,1163,1169,1170],left:[40,41,43,1086,1089,1180,1182,1183,1184,1185,1186,1187,1188,1229],leftmost:[40,41],len:1117,length:[40,41,42,965,968,1035,1056],lenton2021ivi:1229,lenton:1229,less:[40,41,43,85,211,391,509,634,825,836,837,965,978,1117,1173,1177],less_util_node_str:1117,let:[1272,1275],level:1229,librari:[1229,1271,1275],lightweight:1229,like:[43,1063,1069,1173,1177,1229,1271,1272,1275],limit:[40,41,42,821,822,823,965,979,980,981],linalg:[29,1087,1088,1089,1090,1091,1092,1093,1229],line:43,linear0:[1229,1271],linear1:1229,linear2:1271,linear:[965,1000,1019,1086,1190,1191,1192,1193,1198,1206,1229,1246,1247,1248,1249,1250,1251,1252,1253,1271],linear_algebra:[469,470,471,472,836,837],linear_resampl:[126,287,427,551,677,965],linearli:[965,1000],link:[43,1229],linspac:[126,287,427,551,677,965,968],list:[15,18,19,40,41,43,383,384,385,818,819,820,838,839,840,846,847,848,891,900,901,910,911,913,914,915,917,920,921,935,965,968,972,974,1025,1044,1045,1053,1058,1113,1114,1115,1117,1161,1162,1163,1165,1169,1170,1198,1199,1200,1201,1202,1203,1204,1205,1229,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253],list_join:[40,41,42],list_stack:[40,41],liter:[836,837],littl:1272,load:[40,41],loaded_kwarg:1117,loader:1229,local:43,local_set:[965,1008],locat:[43,825,831,965,1018,1173,1174],log:[765,965,1021,1097,1117,1211,1212,1213,1214,1229],log_all_op:1223,log_global_inference_abs_tim:[1220,1229],log_global_inference_rel_tim:[1220,1229],logarithm:[1097,1108],logic:[31,825,833,846,847,848,1095,1096,1229],logical_and:[351,762,1094],logical_not:[85,211,391,509,634,825],logical_or:[351,762,1094],logit:[1211,1214],logspac:[126,287,427,551,677,965],look:[43,1272,1275],loop:[1113,1114,1115,1116],loss:[1212,1213,1214,1229,1271],loss_fn:[1229,1271],lot:1272,low:[40,41,476,1173,1175,1177],lower:[40,41,43,965,1024,1173,1177],lower_depth:[1258,1259],lowest:[15,18,19,40,41,1161,1170,1173,1175],lstm:[1198,1208,1229,1246],lstm_updat:[43,1198],machin:[821,822,823,825,832,1086,1091,1173,1179,1229,1272,1275],made:43,mai:[965,968,990,994,1229,1272,1275],main:[965,1010,1229],mainli:1229,maintain:43,make:[43,476,891,1117,1229,1272],maml:[1113,1114,1115],maml_step:1113,manag:[891,1117],manhattan:[836,837],mani:[40,41,43,965,1045,1229],manipulation_funct:[838,839,840],manner:[15,18,19,40,41,43,1161,1170],manual:[1161,1162,1169,1275],map:[40,41,42,825,831,891,900,965,1018,1117,1161,1166,1167,1170,1246,1257,1271],map_cont:[40,41],map_nest_at_index:1161,map_nest_at_indic:1161,map_sequ:[40,41],mapper:[891,900,901,1117],mask:[1198,1209,1210],master:43,match:[40,41,965,1022],match_kwarg:965,math:[33,475,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1117,1229],mathbb:[1086,1093],mathbf:[1086,1093],mathemat:[817,836,837],matmul:[43,287,427,551,677,965,1275],matplotlib:1272,matric:[1198,1207],matrix:[40,41,965,967,980,1023,1086,1087,1088,1089,1090,1091,1093,1198,1207,1246,1256],matrix_norm:[40,41,165,345,469,597,754,1086],matter:1229,max:[40,41,386,821,822,823,965,980,981,992,1024,1037,1038,1117,1180,1182,1262,1264],max_batch_s:[40,41],max_chunk_s:[891,935,1117],max_depth:[40,41,891,895,898,905,913,917,923,965,1008,1117,1161,1170],max_dev_dim_step_ratio:891,max_freq:[965,1000],max_length:[40,41],max_node_dim_step_ratio:1117,max_norm:[40,41,965,980,981],max_split_factor_step_s:[891,1117],max_trust_ratio:[1063,1070,1262,1264],maxim:[1229,1272,1275],maximis:1229,maximum:[40,41,42,677,891,913,917,923,935,965,970,979,980,981,1000,1063,1070,1117,1161,1170,1180,1182],mayb:[15,18,19],mdi:1117,mean:[40,41,476,891,920,921,922,923,935,965,992,1113,1114,1115,1116,1117,1161,1165,1173,1176,1180,1183,1186,1188,1237,1271,1275],measur:[1198,1209,1246,1257],mech:1229,mechan:[1229,1275],medic:1275,member:43,memori:[891,907,930,935,937,940,1117,1198,1208,1229],merg:43,merge_with_upstream:43,meshgrid:[287,427,677,965],messag:[1273,1274],meta:[35,1114,1115,1116,1229],method:[40,41,42,43,476,965,972,984,1025,1037,1038,1063,1070,1071,1117,1161,1162,1169,1170,1229,1246,1257,1258,1259,1272],might:[965,990,1275],min:[40,41,386,821,822,823,836,837,965,992,1026,1037,1038,1046,1086,1091,1117,1180,1184],min_bas:[965,1047],min_denomin:[965,1046],min_dev_dim_s:891,min_node_dim_s:1117,min_sf_tune_step:[891,1117],min_unit_dev_tune_step:891,min_unit_node_tune_step:1117,mind:1229,mini:[1215,1216,1260,1261],minimum:[40,41,677,891,941,945,965,968,971,972,979,1005,1006,1039,1040,1046,1047,1117,1180,1184],miss:[1262,1266],ml_framework:[825,832,965,968,1086,1091],mod:[965,999],mod_depth:[1258,1259],mod_height:[1258,1259],mod_with_top_mod_key_chain:[1258,1259],mode:[40,41,469,471,889,890,891,920,921,922,923,935,1086,1091,1092,1117,1272],model:[1229,1271],modul:[40,41,42,59,965,1027,1117,1229,1230,1232,1233,1234,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1260,1261,1268,1269,1275],moment:[1063,1065,1066,1070,1262,1263,1264],more:[43,838,839,965,1048,1117,1229,1272,1275],more_util_node_str:1117,most:[40,41,43,1086,1091,1229,1275],move:[40,41,43,891,936,1117],much:[43,1229,1275],multi:[476,965,1027,1198,1209,1246,1257],multi_head_attent:1198,multi_index_nest:1161,multi_map:[40,41],multi_nod:1117,multidev:[891,902,903,904,923],multidevcontain:[40,41],multidevic:[891,900],multidevit:[891,894,897,900,901,905],multidevitem:[891,893,896],multidevnest:[891,895,898],multiheadattent:[1229,1246],multinod:[1117,1121],multinodecontain:1117,multinodeit:1117,multinodeitem:1117,multinodenest:1117,multinomi:[171,355,476,604,780,1173],multipl:[40,41,846,847,848,965,1022,1045,1086,1088,1180,1182,1183,1184,1185,1186,1188,1215,1216,1246,1256,1272],multipli:[40,41,965,987,1180,1185],multiprocess:[40,41,42,427,677,891,900,965,1117],must:[40,41,42,43,818,819,820,825,826,827,830,832,834,836,837,838,839,840,846,847,848,850,869,875,891,920,921,922,923,935,965,968,982,984,986,994,1024,1026,1038,1048,1097,1102,1105,1117,1173,1178,1262,1266],mutabl:[1161,1163,1170],mutlidevic:[891,900],mutlinod:1117,mw_tm1:[1063,1066,1070],mx_concat:1229,mxnet:[43,1229,1275],my_func:43,mymodel:1229,name:[889,890,1217,1218,1219,1223,1271],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1272],nan:[40,41,817,825,826,830,831,965,1009,1059],nativ:[15,17,18,19,40,41,43,891,907,909,918,919,930,937,940,941,946,953,954,1117,1229,1230,1235,1236],native_modul:[1235,1236],native_module_class:[1235,1236],nativearrai:[15,18,19,43,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,843,844,846,847,848,850,869,875,891,909,935,936,941,945,951,956,957,965,966,967,968,970,971,972,973,974,976,978,979,980,981,982,983,985,986,987,988,991,992,993,994,996,997,998,999,1000,1002,1003,1007,1009,1010,1011,1018,1019,1020,1021,1023,1024,1025,1026,1029,1030,1031,1034,1035,1036,1037,1038,1043,1045,1048,1050,1051,1053,1054,1055,1056,1058,1059,1060,1061,1062,1117,1161,1163,1170],natur:[1097,1108,1275],ncdhw:[1198,1203,1204,1246,1251,1252],nchw:[1198,1201,1202,1205,1246,1249,1250,1253],ncw:[1198,1199,1200,1246,1247,1248],ndarrai:[43,383,384,385,386,388,389,476,965,1054],ndhwc:[1198,1203,1204,1246,1251,1252],nearest:[965,1036],need:[43,965,980,981,1198,1200,1202,1204,1229,1246,1248,1250,1252,1275],neg:[40,41,825,830,836,837,838,839,846,847,848,1180,1185,1187,1190,1192],negative_slop:1237,neither:1117,nest:[15,16,17,18,19,40,41,42,891,913,917,923,965,972,1053,1113,1114,1115,1117,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1258,1259,1262,1263,1264,1265,1266,1267],nested_indices_wher:1161,nested_map:[1117,1161],network:[1198,1207,1229,1230,1232,1246,1258,1259,1275],neural:[1198,1229,1232,1246,1271],new_node_percent_mem:1117,new_node_util:1117,new_node_utils_kei:1117,new_std:[1215,1216,1260,1261],newli:[43,889,890,965,976,977],newlin:[40,41,42],newshap:[965,976,1035],next:[821,822,1117,1258,1259,1262,1263,1264,1265,1266,1267],nhwc:[1198,1201,1202,1205,1246,1249,1250,1253],node:[40,41,1161,1162,1169],node_clon:1117,node_dist:1117,node_dist_arrai:1117,node_dist_it:1117,node_in:1117,node_mapp:1117,node_str:1117,node_to_str:1117,node_util:1117,nodedistit:1117,nodedistitem:1117,nodedistnest:1117,nodemanag:[1117,1128],nodemapp:1117,nodemappermultiproc:1117,noinspect:[43,892,942,943,944,1064,1117,1224],non:[40,41,836,837,846,847,848,889,890,941,955,1258,1259,1262,1266,1272],none:[40,41,42,43,59,61,64,383,384,385,425,427,428,431,433,440,441,442,443,450,451,452,453,454,455,456,457,459,469,470,476,477,818,819,820,821,822,823,825,832,836,837,838,839,846,847,848,889,890,891,900,901,907,908,933,934,935,936,941,948,949,950,965,968,972,989,990,995,997,1001,1002,1003,1008,1010,1012,1013,1014,1015,1016,1020,1021,1027,1029,1030,1031,1034,1037,1038,1039,1040,1045,1046,1047,1056,1057,1062,1063,1066,1068,1070,1071,1072,1078,1079,1083,1086,1089,1091,1113,1114,1115,1116,1117,1161,1162,1165,1169,1170,1173,1174,1175,1176,1177,1180,1182,1183,1184,1185,1186,1187,1188,1198,1200,1202,1204,1207,1208,1209,1210,1215,1216,1217,1218,1219,1223,1227,1235,1236,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],norm:[40,41,836,837,965,980,981,1086,1089,1216,1229,1261,1262,1264],normal:[1173,1176,1215,1216,1260,1261],normalized_idx:[1215,1216],normalized_shap:[1260,1261],notat:[40,41,1180,1181],note:[43,1086,1091],noth:[40,41,1272],notimplementederror:1117,now:[40,41,891,936,965,966,1117,1229,1246,1257,1258,1259,1271,1272,1275],np_concat:1229,np_finfo:386,ns_tune_step:1117,num:[427,450,451,965,1020,1021],num_arrai:[40,41],num_arrays_in_memori:965,num_arrays_on_dev:891,num_band:[965,1000],num_channel:[1246,1253],num_chunk:1117,num_chunks_floor:1117,num_class:[1173,1174],num_cpu_cor:891,num_gpu:[119,425,891,1117],num_head:[1198,1209,1246,1257],num_kei:[1198,1209,1210],num_lay:[1246,1255],num_or_size_split:[40,41,427,456,965,1045],num_output:1117,num_queri:[1198,1209,1210],num_sampl:[427,449,476,477,965,1019,1079,1080,1173,1174],num_task:[1113,1114,1115,1116],number:[40,41,42,817,821,822,823,825,831,846,847,848,889,890,891,927,928,929,941,952,956,957,965,968,979,983,996,1000,1007,1010,1019,1020,1021,1024,1028,1034,1045,1051,1055,1059,1061,1086,1092,1113,1114,1115,1116,1117,1173,1174,1178,1180,1182,1183,1184,1186,1188,1198,1209,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1272,1275],numer:[43,825,830,850,869,875,965,1005,1006,1039,1040,1046,1047,1097,1105,1237],numhead:[1198,1209],numpi:[40,41,43,383,384,385,386,388,389,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,965,1054,1086,1091,1092,1180,1181,1229,1271,1272,1275],nwc:[1198,1199,1200,1246,1247,1248],obj:[40,41],object:[40,41,42,59,386,821,822,823,891,941,945,965,968,972,1063,1161,1164,1166,1167,1168,1171,1172,1173,1179,1223,1227,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259],object_in:[427,431,965,972],observ:1117,occupi:[821,822,823,965,1037,1038],off:[965,968],offer:1229,offset:[1215,1216],often:1272,old:[40,41],on_init:[1246,1257,1258,1259],onc:[43,891,935,1117,1173,1174,1229],one:[40,41,43,836,837,838,839,840,891,920,921,922,923,935,941,947,965,1010,1022,1029,1037,1038,1048,1086,1089,1117,1180,1181,1182,1183,1184,1185,1186,1187,1188,1229,1272,1275],one_hot:[126,427,551,677,965],onearrai:[965,996],ones:[40,41,77,203,383,501,626,818,965,1010,1029,1031,1229],ones_lik:[126,287,427,551,677,965],ongo:43,onli:[40,41,43,476,838,839,891,1086,1091,1117,1161,1162,1163,1169,1262,1263,1264,1265,1266,1267,1271,1272],onlin:1229,onto:[891,920,921,936,1117,1161,1165,1170],oom:[891,1117],open:[965,968,1173,1177,1229,1275],opencv:1272,oper:[40,41,825,833,965,975,991,992,993,1020,1021,1049,1063,1066,1068,1070,1071,1072,1094,1095,1096,1198,1199,1200,1201,1202,1203,1204,1205,1207,1229,1230],operand:[40,41,825,826,1180,1181],oppos:[965,1000],optim:[891,1063,1066,1068,1070,1071,1072,1113,1114,1115,1116,1117,1229,1263,1264,1265,1267,1271,1275],optimizer_upd:1063,option:[15,18,19,40,41,42,43,383,384,385,818,819,820,825,832,836,837,838,839,846,847,848,889,890,891,900,901,909,913,914,915,916,917,920,921,922,923,930,933,934,935,936,940,941,946,951,955,964,965,967,968,970,971,972,980,981,982,987,989,990,997,1000,1001,1002,1003,1007,1009,1010,1017,1019,1020,1021,1022,1025,1027,1029,1030,1031,1034,1037,1038,1041,1043,1045,1046,1047,1048,1056,1058,1059,1062,1063,1066,1068,1069,1070,1071,1072,1074,1079,1083,1086,1089,1091,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1173,1174,1180,1182,1183,1184,1185,1186,1187,1188,1190,1191,1195,1198,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1272],ord:[836,837,965,997,1086,1092],order:[40,41,42,43,836,837,838,839,843,844,1063,1066,1068,1070,1071,1072,1086,1089,1113,1114,1115,1268,1269],ordered_node_util_kei:1117,org:1275,organ:43,origin:[40,41,42,965,1031,1035,1062,1086,1089],other:[40,41,43,850,852,853,858,860,861,865,867,868,869,870,871,873,875,876,877,878,879,880,882,883,884,886,887,888,889,890,965,967,968,1010,1063,1067,1173,1177,1229,1271,1272,1275],other_i:[43,850,869,875],otherwis:[15,16,17,18,19,40,41,825,830,836,837,846,847,848,891,908,941,948,949,950,965,975,1056,1057,1060,1063,1069,1074,1078,1113,1114,1115,1117,1180,1182,1183,1184,1186,1188],our:[43,1229,1275],out:[476,850,869,965,968,1097,1101,1198,1206,1208,1229,1246,1254],out_feat_dim:[1198,1209],out_featur:[1198,1206,1207],out_i:[825,830],outdat:1275,outer:[1113,1114,1115,1116],outer_batch_fn:[1113,1114,1115],outer_batch_shap:[1198,1207],outer_cost_fn:[1113,1114,1115],outer_v:[1113,1114,1115],outlin:1272,output:[40,41,43,818,819,820,838,839,840,891,900,901,935,965,968,977,1001,1010,1034,1051,1063,1067,1097,1102,1117,1173,1175,1176,1177,1198,1200,1202,1204,1206,1208,1209,1210,1229,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257],output_ax:[891,935,1117],output_axi:1117,output_channel:[1246,1247,1248,1249,1250,1251,1252,1255,1256],output_connected_onli:[1217,1219,1223,1258,1259],output_queu:1117,output_shap:[1198,1200,1202,1204,1246,1248,1250,1252],outsid:[965,979],over:[40,41,836,837,846,847,848,965,997,1086,1089,1173,1177,1180,1182,1183,1184,1186,1188,1215,1216,1260,1261],overal:1272,overflow:[965,968],overhead:1272,overrid:[965,1029,1031,1062],overriden:[1262,1266],overwrit:[40,41,891,935,1117],overwrite_at_key_chain:[40,41],own:[1229,1272,1275],packag:[43,1272],pad:[965,983,1000,1061,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],pad_width:[427,965,983,1061],page:1229,pair:[1198,1210],parallel:[891,900,901,1117],parallelis:[891,900,901,1117],param:[40,41,42,43,427,441,442,825,834,891,935,965,966,1002,1003,1029,1030,1117,1228,1229,1258,1259,1271],paramet:[15,16,17,18,19,40,41,42,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,836,837,838,839,840,843,844,846,847,848,850,869,875,889,890,891,900,901,907,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,930,933,934,935,936,937,940,941,945,946,947,951,952,953,954,955,956,957,964,965,967,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,985,986,987,988,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1009,1010,1011,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1030,1031,1034,1035,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1074,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271],parameter:[1173,1176,1177],params_all_empti:1223,pardo:1229,pars:[965,984],part:[1063,1066,1068,1070,1071,1072,1097,1101,1229,1258,1259,1272],partial:[40,41,1258,1259],particl:1275,particular:[43,1275],pass:[40,41,42,43,891,900,935,941,946,965,977,1063,1077,1113,1114,1115,1117,1235,1236,1258,1259,1262,1266,1268,1269],pattern:[40,41,965,991,992,993],per:[891,1117,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],percent_used_mem_on_dev:891,percent_used_mem_on_nod:1117,percentag:[891,930,1117],perf_count:1117,perform:[40,41,43,843,844,846,847,848,891,965,970,971,987,991,992,993,1013,1014,1015,1019,1020,1021,1063,1066,1068,1070,1071,1072,1079,1080,1113,1114,1115,1116,1117,1161,1166,1167,1180,1182,1183,1184,1185,1186,1187,1188,1190,1195,1198,1206,1208],permissable_step:1117,permit:43,permut:[476,965,1050,1056],perpendicular:[965,986],person:1229,physci:1275,pickl:[40,41,1117],pickle_filepath:[40,41],pid:1223,pinv:[345,754,1086],pip:1229,pipelin:1271,pkk:1275,pkkm1:1275,pkm1km1:1275,place:[40,41,43,818,819,820,891,936,965,996,1001,1013,1014,1015,1117,1262,1263,1264,1265,1266,1267],placehold:[1161,1170],pleas:[476,1086,1091],point:[43,817,818,819,820,821,822,825,826,834,836,837,941,956,965,968,1097,1105],popul:[40,41,1173,1174],popular:1275,population_s:[476,477,1173,1174],portabl:[1229,1230],posit:[15,16,17,821,822,825,830,891,913,917,923,965,966,968,996,1000,1117,1173,1178,1235,1236],possibi:[40,41],possibl:[965,1022,1053,1079,1084,1275],post:[1215,1216],post_shap:[40,41],power:[43,850,875,881,965,1005,1039,1047,1237],practic:1229,pre:[891,1117,1229],pre_shap:[40,41],precis:[821,822,825,834],pred:[1211,1212,1213,1214],predict:[1211,1212,1213,1214,1275],preprint:1229,present:[40,41],preserv:[40,41,42,838,839,965,997,1063,1074],preserve_typ:[40,41,460,463,1063,1074],press:1229,prevent:[43,1063,1065,1066,1070,1117,1262,1263,1264],previou:[1063,1066,1070],previous:[965,977],prime:1229,print:[40,41,42,891,931,965,1032,1229,1271],print_all_arrays_in_memori:965,print_all_arrays_on_dev:891,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1262,1266],prob:[476,477,1173,1174,1198,1206,1246,1254],probabl:[1173,1174,1198,1206,1246,1254],problem:[43,1275],process:[43,891,900,901,930,940,965,1027,1117],process_specif:[891,930,940,1117],prod:[40,41,965,992],produc:[891,900,901,1117],product:[40,41,965,986,987,1023,1180,1181,1198,1209,1210,1246,1257],profil:[119,281,425,544,669,891,1117],project:[1229,1271,1272,1275],promot:[43,825,826,827,834,836,837,850,875,1097,1105],prompt:1229,properli:43,properti:[40,41,386,891,903,1117,1223,1227,1258,1259,1262,1263,1264,1265,1267],provid:[40,41,43,838,839,846,847,848,889,890,891,908,941,948,949,950,955,964,965,990,1029,1031,1038,1062,1063,1066,1068,1070,1071,1072,1078,1117,1229,1246,1255,1262,1263,1264,1265,1266,1267,1272],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1086,1090],ptype:[1223,1227],pull:[1229,1230],pure:[40,41,1229,1275],purpos:1275,put:1117,pybroadexcept:1117,pyprotectedmemb:[1117,1224],pyshadowingbuiltin:43,pyshadowingnam:[892,942,943,944,1064,1117],python:[40,41,891,930,940,965,968,1117,1229],pytorch:[1063,1066,1068,1070,1071,1072,1086,1091,1229,1262,1263,1264,1265,1266,1267,1271,1272,1275],pyunresolvedrefer:1117,quadrant:[1097,1102],queri:[40,41,850,864,885,891,924,934,1117,1198,1209,1210,1246,1257],query_dim:[1246,1257],query_kei:[40,41],queue:[40,41,42,891,900,901,965,1033,1041,1117],queue_class:[891,900,901,1117],queue_load_s:[40,41,42],queue_timeout:[40,41,42,965,1117],quick:[476,1229],quickli:[43,1271],radian:[825,828,1097,1098,1100,1102,1109,1111],rai:[1097,1098],rais:[40,41,43,838,840,846,847,848,850,875,965,975,1005,1039,1047,1057,1117,1258,1259,1262,1266],ram:[891,930,937,940,1117],randint:[171,355,476,604,780,1173],random:[37,40,41,477,1174,1175,1176,1177,1178,1179,1229],random_crop:1079,random_norm:[171,355,476,604,780,1173],random_uniform:[171,355,476,604,780,1173],randomli:[476,1079,1083,1198,1206,1246,1254],randomness_factor:[1217,1219,1223,1258,1259],rang:[476,965,968,1020,1021,1097,1102,1117,1229,1271,1275],rank:[836,837,846,847,848,965,983,1058,1061],rate:[1063,1066,1068,1070,1071,1072,1113,1114,1115,1116,1246,1257,1262,1263,1264,1265,1266,1267],rather:[40,41,891,935,965,968,1017,1063,1069,1117],ratio:[891,1063,1070,1079,1084,1117,1262,1264],raw:[40,41,1086,1091],raw_delta:1117,reach:[891,913,917,923,1117,1161,1170],read:[40,41],readi:[1117,1271],real:[1097,1098,1101],realiti:1272,rearrang:[40,41,965,991,993],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1113,1115],receiv:[891,900,901,965,969,1022,1117,1246,1256],receivess:[891,1117],receiving_fn:1223,receivng:[1113,1116],recev:[1113,1114,1115],recognit:1275,recommend:1229,rectifi:[1190,1192,1193],recurr:[1198,1208],recurrent_bia:[1198,1208],recurrent_kernel:[1198,1208],recurs:[40,41,1161,1162,1163,1169,1170],redefin:43,reduc:[40,41,846,847,848,891,935,965,992,1086,1091,1117,1180,1182,1183,1184,1185,1186,1187,1188],reduce_max:[40,41,178,360,478,609,787,1180],reduce_mean:[40,41,178,360,478,609,787,1180,1229,1271],reduce_min:[40,41,178,360,478,609,787,1180],reduce_prod:[40,41,178,360,478,609,787,1180],reduce_std:[40,41,360,1180],reduce_sum:[40,41,178,360,478,609,787,1117,1180],reduce_var:[40,41,178,360,478,609,787,1180],reduct:[39,40,41,427,454,455,846,847,848,965,992,1037,1038,1181,1182,1183,1184,1185,1186,1187,1188,1229],refactor:43,refer:[43,846,847,848,1063,1065,1066,1086,1093,1246,1256,1275],reflected_oper:[0,13,14],regard:[891,1117],regardless:[40,41,889,890],register_paramet:1271,reimplement:1275,rel:[838,839,1063,1066,1068,1070,1071,1072],rel_slice_obj:1117,relev:[1262,1263,1264,1265,1266,1267],relu:[796,1190,1191,1192,1229,1271],remain:[43,965,1035,1161,1165],remaind:[40,41,965,999,1045],remov:[40,41,838,840,1113,1114,1115],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,838,839,965,997],rep:[965,1051],repeat:[40,41,43,287,677,965,993,1051,1117,1272],repeated_config_check:[891,1117],repeatedli:[1161,1168],repetit:[40,41,965,1034,1051],replac:[40,41,43,476,477,965,979,1037,1038,1173,1174],repo:[43,1229],repres:[43,825,826,941,947,952,1198,1207],represent:[40,41,42,43,817,821,822,823,825,827,891,918,919,941,947,953,954,965,1044,1053,1117],reptil:[1113,1116],reptile_step:1113,request:[1229,1230],requir:[43,825,834,889,890,941,945,965,968,972,1235,1236],resampl:[965,1019],reserv:43,reshap:[40,41,43,476,677,965],reshape_lik:[40,41],respect:[825,827,832,850,869,965,994,1063,1065,1066,1067,1068,1070,1071,1072,1086,1091,1097,1105,1113,1114,1115,1116],respond:43,respons:1117,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,825,826,827,830,832,833,834,836,837,846,847,848,850,869,875,891,900,965,968,994,1037,1038,1048,1086,1089,1094,1095,1096,1097,1105,1117,1180,1182,1183,1184,1185,1186,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1229],ret:1117,ret_dict:1117,ret_fn:[891,900,901,1117],retain:[1063,1067],retain_grad:[460,461,1063,1067],retreiv:1117,retrn:[965,1044],return_cont:[40,41],return_dict:[40,41],return_graph:[1217,1218,1219],return_inner_v:[1113,1114,1115,1116],return_sequ:[1246,1255],return_st:[1246,1255],rev:[965,990],revers:[40,41,838,839,965,990,997,1056],review:43,right:[40,41,43],rk_e:1275,robot:1229,ronald:1229,root:[43,825,834],round:[287,427,677,825,834,965,968,1117],row:[965,1010,1173,1174],rule:[43,825,827,834,850,875,965,968,1097,1105],run:[43,891,900,1063,1065,1066,1070,1113,1114,1115,1116,1117,1229,1230,1246,1257,1258,1259],safe:[891,900,1117],safety_factor:[891,1117],same:[15,16,17,40,41,43,838,839,840,891,900,901,935,936,941,945,965,966,978,982,998,999,1002,1003,1029,1031,1036,1037,1038,1048,1062,1063,1069,1074,1086,1092,1097,1101,1113,1114,1115,1117,1180,1181,1198,1199,1200,1201,1202,1203,1204,1205,1229,1246,1247,1248,1249,1250,1251,1252,1253,1271,1275],same_arrai:[40,41],sampl:[965,1019,1079,1080,1173,1174,1176,1177,1198,1206,1229,1246,1254],satisfi:[965,972,1086,1088,1093],save:[40,41,965,1042,1052,1079,1081,1258,1259],save_debug_info:1223,save_dir:[425,426,891,906,1117],save_to_disk:[1217,1219,1223,1258,1259],save_weight:[1258,1259],scalar:[836,837,965,979,1029,1055,1059],scale:[891,933,934,1063,1071,1117,1198,1206,1209,1210,1215,1216,1246,1254,1257,1262,1265],scaled_dot_product_attent:1198,scatter:[965,1029,1037,1038],scatter_flat:[126,287,427,551,677,965],scatter_nd:[126,287,427,551,677,965],scene:[1063,1066,1068,1070,1071,1072],schemat:1229,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,825,827,891,922,965,973,986,994,1033,1041,1050,1063,1065,1066,1070,1113,1115,1117,1262,1263,1264],secondli:1275,sector:[825,826],see:[43,59,386,425,426,476,825,827,836,837,846,847,848,850,869,875,891,903,904,905,906,941,965,968,1020,1021,1063,1097,1105,1223,1227,1229,1237,1239,1240,1242,1243,1245],seed:[40,41,171,476,780,1173],seed_valu:[40,41,476,1173,1178],seem:1229,seen_set:[965,1008],select:[965,972,1272,1275],self:[40,41,43,59,386,425,426,850,869,875,891,903,904,905,906,941,1063,1117,1223,1227,1229,1237,1239,1240,1242,1243,1245,1262,1266,1271,1275],self_i:[850,869],sent:1117,seper:[43,965,1000],seq:[40,41,42,1180,1181,1258,1259],sequenc:[15,16,17,40,41,42,43,476,889,890,891,900,901,910,911,912,913,914,915,916,917,920,921,935,941,945,965,968,972,974,976,982,983,997,1010,1022,1025,1030,1034,1035,1038,1045,1048,1051,1056,1061,1063,1067,1079,1083,1084,1086,1089,1117,1161,1172,1173,1175,1177,1180,1182,1183,1184,1185,1186,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1215,1216,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1255,1258,1259,1260,1261,1262,1266,1268,1269],sequenti:1229,seri:43,set:[15,18,19,40,41,891,920,921,933,934,935,965,967,989,1010,1039,1040,1041,1042,1063,1066,1068,1069,1070,1071,1072,1086,1089,1117,1161,1162,1169,1171,1172,1173,1174,1178,1180,1182,1183,1184,1185,1186,1187,1188,1227,1229,1246,1255,1262,1263,1264,1265,1266,1267,1272,1275],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1227,set_debug_mod:44,set_default_devic:891,set_default_dtyp:941,set_default_float_dtyp:941,set_default_int_dtyp:941,set_default_nod:1117,set_exception_debug_mod:44,set_framework:[40,41,43,59,1117,1229,1271,1272,1275],set_ivy_backend:[40,41],set_min_bas:965,set_min_denomin:965,set_nest_at_index:1161,set_nest_at_indic:1161,set_param:1223,set_queue_timeout:965,set_split_factor:[891,1117],set_stat:[1262,1263,1264,1265,1266,1267],set_tmp_dir:965,set_with_grad:1063,setter:1117,sever:1275,sgd:[1229,1262],shape0:1117,shape:[40,41,43,383,384,385,427,440,455,476,677,818,819,820,838,839,891,903,941,945,965,966,976,978,982,983,996,997,998,999,1001,1003,1007,1010,1029,1030,1031,1034,1035,1036,1037,1038,1044,1048,1061,1062,1079,1083,1086,1088,1091,1097,1101,1102,1117,1173,1175,1176,1177,1180,1181,1198,1200,1202,1204,1223,1227,1246,1248,1249,1250,1251,1252,1253,1260,1261],shape_slic:[40,41],shape_to_tupl:965,share:[40,41,1229,1272],shift:1117,should:[40,41,42,43,476,825,826,827,830,834,836,837,850,869,875,889,890,891,965,976,977,984,1029,1035,1063,1066,1068,1070,1071,1072,1097,1105,1117,1180,1181,1229],show:[40,41,1223,1229,1275],show_debug_info:1223,show_graph:[1217,1229,1258,1259,1262,1266],show_mod_in_top_mod:[1258,1259],show_structur:[1258,1259],show_sub_contain:[40,41],show_v:[1258,1259],show_v_in_top_v:[1258,1259],shown:[40,41],shp:1117,shuffl:[40,41,171,476,780,1173],shuffle_h5_fil:[40,41],sigmoid:[796,1190,1229,1271],signatur:[43,59,386,425,426,427,460,465,469,473,474,476,891,903,904,905,906,941,1063,1223,1227,1237,1239,1240,1242,1243,1245],signific:1275,similar:[43,1198,1209,1246,1257],similarli:[1086,1091],simpl:[43,965,995,1229,1272,1275],simpler:43,simplest:1272,simpli:[40,41,43,1229,1272,1275],simultan:1229,sin:[765,965,1000,1097,1111,1272],sinco:1272,sine:[825,826,1097,1100,1109,1110],singl:[40,41,889,890,891,900,901,920,921,922,923,965,1055,1059,1079,1084,1117,1173,1176,1177,1180,1182,1183,1184,1185,1186,1187,1188,1229,1272,1275],singleton:[836,837,838,840,846,847,848],singular:[1086,1092],sinh:[765,1097],siren:[1229,1237],size:[40,41,42,427,454,838,840,891,914,915,916,917,933,934,935,965,968,976,1020,1021,1037,1045,1079,1083,1086,1089,1092,1117,1173,1174,1176,1177,1180,1182,1183,1184,1185,1186,1187,1188,1246,1247,1248],size_ordered_arrai:[40,41],skew:[1086,1093],skinv:1275,skip:[40,41],slice:[40,41,843,844,965,1002,1003,1117,1161,1168],slice_kei:[40,41],slice_obj:[40,41,1117],slice_via_kei:[40,41],slide:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],slope:[1190,1192],small:[1211,1212,1213,1214,1215,1216,1229,1260,1261,1272],smaller:[965,979],smallest:[40,41,821,822,823,965,971,978],smallest_norm:[386,821,822],softmax:[187,487,796,1190,1198,1209,1210],softplu:[796,1190],solv:1275,some:[40,41,43,965,968,1063,1065,1066,1068,1070,1071,1072,1077,1198,1206,1229,1246,1254,1272,1275],some_backend:43,some_namespac:43,someth:[43,1275],something_cool:43,somewher:[40,41],sort:[40,41,42,844,1086,1092,1117],sort_by_kei:[40,41],sorting_funct:[843,844],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,383,384,385,386,388,389,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,900,901,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1227,1232,1233,1234,1235,1236,1237,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1273,1274,1275],space:[965,968,1000,1020,1021],spars:[1211,1214],sparse_cross_entropi:1211,spawn:[965,1027],special:[825,826],specif:[40,41,43,891,933,965,984,991,992,993,1027,1113,1114,1115,1116,1117,1173,1179,1229,1258,1259,1271,1272],specifc:[1173,1174],specifi:[40,41,43,836,837,838,839,840,846,847,848,891,910,911,912,913,914,915,916,917,920,921,925,927,931,934,935,936,941,945,947,965,968,970,971,972,979,982,983,1001,1002,1003,1009,1020,1021,1048,1058,1061,1086,1089,1117,1161,1166,1167,1171,1172,1180,1181,1182,1183,1184,1185,1186,1187,1188],split:[40,41,126,287,427,551,677,891,900,914,915,916,917,933,934,935,965,1022,1117],split_arg:1117,split_factor:[891,900,1117],split_func_cal:[891,1117],split_siz:1117,spread:[891,923,1117],sqrt:[85,211,391,509,634,825,836,837],squar:[825,834,965,1010,1086,1088],squeez:[98,221,404,522,647,838],stabil:[843,844,965,1046,1047],stabl:[843,844,965,1005,1006,1039,1040,1046,1047],stable_divid:965,stable_pow:965,stack:[40,41,287,677,965,1079,1084,1161,1162,1169,1246,1255],stack_imag:[161,341,465,593,750,1079],stacked_dim_s:1117,stage:43,standard:[40,41,821,822,1173,1176,1180,1186,1215,1216,1229,1230,1260,1261],start:[40,41,43,425,426,427,428,450,451,476,891,906,965,968,1020,1021,1117,1229,1272],starting_index:[40,41],starting_split_factor:[891,1117],state:[1117,1198,1208,1217,1218,1219,1223,1229,1232,1233,1234,1235,1236,1237,1239,1240,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271],statement:1272,static_argnam:[427,433,889,890],static_argnum:[427,433,889,890],std:[476,1173,1176],step:[40,41,427,428,891,965,968,1020,1021,1063,1065,1066,1068,1070,1071,1072,1113,1114,1115,1116,1117,1229,1262,1263,1264,1265,1266,1267,1271,1275],stephen:1229,stick:1229,still:[40,41,43],stochast:[1262,1267],stop:[40,41,425,426,427,428,450,451,891,906,935,965,968,1020,1021,1063,1066,1068,1070,1071,1072,1074,1113,1114,1115,1116,1117,1262,1263,1264,1265,1266,1267],stop_gradi:[40,41,336,460,588,744,891,935,1063,1066,1068,1070,1071,1072,1113,1114,1115,1116,1117,1262,1263,1264,1265,1266,1267],stopiter:1117,store:[40,41,965,1000,1045,1063,1077,1258,1259],store_var:[1258,1259],str:[15,16,17,40,41,42,43,383,384,385,386,388,389,821,822,823,889,890,891,900,901,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,935,941,946,947,952,953,954,955,956,957,964,965,972,989,991,992,993,1025,1027,1030,1037,1038,1086,1089,1091,1113,1114,1115,1116,1117,1161,1165,1180,1181,1235,1236,1246,1257,1258,1259],str_to_nod:1117,straight:1272,strength:[1229,1275],stride:[1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],string:[40,41,43,891,907,909,918,919,924,930,936,937,940,941,945,951,953,954,955,964,965,968,972,989,1010,1030,1031,1062,1117,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253,1258,1259],structur:[40,41,42,43,965,984],structural_diff:[40,41],sub:[40,41,891,914,915,920,921,922,923,965,1045,1113,1114,1115,1116,1117],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1117,sub_mod:[1258,1259],sub_modul:[1268,1269],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1229,1230,1260,1261,1268,1269],subsequ:43,subset:43,substr:[40,41],suffici:[1086,1091],suggest:1229,suitabl:[1079,1084],sum:[40,41,427,454,455,836,837,891,920,921,922,923,935,965,988,992,1037,1038,1117,1180,1181,1187],summat:[40,41,1180,1181],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,99,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,162,163,164,166,167,168,172,173,174,175,176,177,179,180,181,182,183,184,185,188,190,191,193,194,195,196,197,198,199,204,205,207,208,209,212,213,214,215,216,217,220,222,223,227,230,231,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,342,343,344,346,347,348,349,350,352,353,356,357,358,359,361,362,363,364,365,366,367,368,371,373,374,375,376,377,378,379,384,385,387,388,389,392,393,394,395,396,397,398,399,400,403,405,406,410,413,414,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,466,467,468,470,471,472,475,477,479,480,481,482,483,484,485,488,489,491,492,493,494,495,496,497,502,503,505,506,507,510,511,512,513,514,515,516,517,518,521,523,524,528,531,532,540,545,546,547,548,549,550,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,589,590,591,592,594,595,596,598,599,600,601,605,606,607,608,610,611,612,613,614,615,616,620,621,622,627,628,630,631,632,635,636,637,638,639,640,641,642,643,646,648,649,653,656,657,665,670,671,672,673,674,675,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,745,746,747,748,749,751,752,753,755,756,757,758,759,760,761,763,764,766,767,768,769,770,771,772,773,774,775,776,777,778,779,781,782,783,784,785,786,788,789,790,791,792,793,794,797,798,799,800,801,802,803,805,806,808,809,810,811,812,813,814,819,820,822,823,826,827,828,829,830,831,832,833,834,836,837,839,840,844,847,848,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1216,1218,1219,1221,1222,1224,1228,1229,1233,1234,1236,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1274,1275],supports_inplac:965,suppos:1275,sure:43,svd:[345,597,754,1086],swap:[40,41,965,1050],swapax:[40,41,551,677,965,1275],symmetr:[1086,1093],syntax:[425,427,460,465,469,473,474,476],tab:1229,take:[43,965,1019],taken:[1180,1182,1183,1184,1186,1188],tan:[765,1097,1101],tangent:[1097,1101,1102,1103,1111,1112,1190,1197],tanh:[765,796,1097,1190],target:[40,41,891,907,910,911,912,913,914,915,916,917,920,921,922,923,936,1117,1229],target_dict:[40,41],task:[43,1113,1114,1115,1116],team:[43,1275],templat:1229,temporari:[965,1042,1052],tensor:[40,41,43,427,454,455,843,844,891,909,941,951,965,968,970,971,976,1020,1021,1024,1026,1029,1030,1031,1035,1037,1038,1045,1062,1117,1173,1174,1175,1198,1206,1208,1229,1246,1254,1256,1262,1263,1264,1265,1266,1267,1271,1272],tensorflow:[43,1086,1091,1198,1200,1202,1204,1229,1246,1248,1250,1252,1272,1275],term:[40,41,1198,1208,1229,1246,1256],termcolor:[40,41,42],termin:[40,41,42,1117],test:[43,825,830,846,847,848,941,956,957],test_array_api:43,tf_concat:1229,than:[40,41,821,822,836,837,838,839,840,891,935,965,968,978,979,998,1017,1024,1048,1063,1069,1117,1173,1177,1229,1272],thei:[40,41,43,1097,1102,1113,1114,1115,1173,1174,1229,1268,1269,1272],them:[1229,1275],themselv:[1161,1162],therefor:43,thi:[40,41,42,43,891,913,917,923,930,935,940,965,968,1000,1033,1035,1041,1063,1066,1068,1069,1070,1071,1072,1077,1086,1089,1117,1161,1165,1170,1180,1182,1183,1184,1185,1186,1187,1188,1198,1207,1229,1258,1259,1262,1263,1264,1265,1266,1267,1271,1272,1275],thing:[43,1229],those:[40,41,965,979,1063,1077,1086,1092,1117],though:43,threshold:[965,1024,1026],through:[40,41],tickbox:43,tile:[287,551,677,965],time:[965,1051,1063,1066,1070,1113,1114,1115,1116,1117,1173,1174,1198,1208,1246,1257,1258,1259,1275],time_chronolog:[1217,1218,1223],time_infer:[1217,1218],timeout:[40,41,42,891,900,901,965,1033,1041,1117],timestep:[1198,1208,1246,1255],timing_fnam:[1217,1218],titl:1229,tmp_dir:965,tmp_dr:[965,1042],to_appli:[40,41],to_clon:[891,1117],to_dev:[40,41,119,281,425,544,669,891],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[891,1117],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1229],to_ivy_modul:[189,804,1229,1235],to_json:[40,41],to_kv_fn:[1198,1209],to_kv_v:[1198,1209],to_list:[40,41,427,677,965],to_multi_dev:[40,41],to_mut:[1161,1163,1170],to_n:[15,40,41,1229],to_nod:1117,to_numpi:[40,41,427,677,965,1229,1271],to_out_fn:[1198,1209],to_out_v:[1198,1209],to_q_fn:[1198,1209],to_q_v:[1198,1209],to_raw:[40,41],to_scalar:[427,677,965],todo:[43,1117],togeth:[40,41,1268,1269],tool:[1229,1272],top_mod:[1258,1259],topic:1275,torch:[43,889,890,1229,1271,1272,1275],torch_concat:1229,torchfcmodel:1271,total:[40,41,42,891,937,1117],total_mem_on_dev:891,total_mem_on_nod:1117,tpu:[891,938,1117],tpu_is_avail:[425,544,669,891,1117],tpye:[941,952],trace:[40,41,965,1017],track:[43,891,1117,1161,1170,1258,1259],track_submod_call_ord:[1258,1259],track_submod_ret:[1258,1259],trail:[1260,1261],train:[1063,1065,1066,1070,1229,1230],trainabl:[1063,1069,1229,1230,1235,1236,1258,1259,1268],trainer:1229,tran:1275,transform:[1198,1206,1207],transpos:[40,41,126,287,427,677,891,922,965,1117,1198,1200,1202,1204,1246,1248,1250,1252],travers:[15,18,19,40,41,1161,1170],treat:[40,41,889,890],tree_depth:1227,tree_height:1223,tri:[40,41],trigonometr:[825,828,1097,1098,1101,1109],trim_kei:[40,41],trust:[1063,1070,1262,1264],truth:[825,832,833,850,869,965,994,1094,1095,1096],try_else_non:965,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[891,1117],tune_dev_alloc:891,tune_dev_split:891,tune_node_alloc:1117,tune_node_split:1117,tune_step:[891,1117],tupl:[15,16,17,18,19,40,41,43,383,384,385,818,819,820,836,837,838,839,840,846,847,848,889,890,965,983,1000,1001,1044,1061,1117,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1175,1180,1182,1183,1184,1185,1186,1187,1188],tutori:43,two:[40,41,965,968,973,986,1023,1050,1086,1089,1092],type:[15,18,40,41,42,43,59,388,389,425,426,818,819,820,822,823,825,826,827,830,832,834,836,837,838,839,840,846,847,848,850,869,875,891,903,904,905,906,918,919,923,935,941,945,946,947,951,952,953,954,955,956,957,964,965,966,968,972,978,982,984,994,998,999,1001,1010,1017,1029,1030,1031,1036,1049,1059,1062,1063,1069,1074,1097,1105,1117,1223,1227,1229,1237,1239,1240,1242,1243,1245,1258,1259,1272],types_to_iteratively_nest:[40,41,42],uint8:[1079,1081,1085],uint8_img_to_float_img:1079,unchang:[15,16,17,18,19],uncom:43,underli:[825,827],underwai:43,unif:1117,unifi:[40,41,891,920,921,922,923,935,1117,1229],uniform:[40,41,1173,1174,1176,1177,1237,1239,1240,1243,1244],uniformli:[1173,1175,1177],unify_arrai:1117,unify_it:1117,unify_nest:1117,union:[15,18,19,40,41,43,383,384,385,386,388,389,818,819,820,821,822,823,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,850,869,875,889,890,891,909,914,915,916,917,935,936,941,945,946,947,951,952,953,954,955,956,957,964,965,966,967,968,970,971,972,973,974,976,978,979,980,981,982,983,985,986,987,988,991,992,993,994,996,997,998,999,1000,1001,1002,1003,1007,1009,1010,1011,1018,1019,1020,1021,1023,1024,1025,1026,1029,1030,1031,1034,1035,1036,1037,1038,1043,1044,1045,1048,1050,1051,1053,1054,1055,1056,1058,1059,1060,1061,1062,1117,1161,1162,1163,1169,1170],uniqu:[891,900,901,1113,1114,1115,1116,1117,1161,1165],unique_kwarg:1117,unit:[43,891,1097,1098,1100,1117,1190,1191,1192,1193],unitari:[1086,1092],unless:[965,1029,1031,1062],unlik:[891,1117],unnorm:[1173,1174],unpack:[965,1058],unrol:[1198,1208],unset:1272,unset_debug_mod:44,unset_default_devic:891,unset_default_dtyp:941,unset_default_float_dtyp:941,unset_default_int_dtyp:941,unset_framework:[59,1272],unset_with_grad:1063,unstack:[40,41,126,287,427,551,677,965],until:43,unus:[889,890],updat:[40,41,427,454,455,891,900,965,1015,1037,1038,1063,1065,1066,1068,1070,1071,1072,1113,1114,1115,1117,1161,1166,1167,1171,1172,1198,1208,1229,1230,1235,1236,1262,1263,1264,1265,1266,1267,1272,1275],update_backend:[40,41],update_config:[40,41],update_inference_tim:1223,upper:[40,41,1173,1177],upper_depth:[1258,1259],upstream:43,usabl:[1229,1275],usag:[891,935,1117],use:[40,41,42,43,476,891,900,901,926,938,965,1034,1046,1047,1086,1091,1117,1198,1209,1215,1216,1229,1260,1261,1272,1275],used:[40,41,43,476,891,900,930,933,934,940,941,952,965,1005,1006,1022,1031,1037,1038,1039,1040,1062,1063,1070,1071,1086,1089,1113,1114,1115,1116,1117,1161,1170,1246,1257,1262,1264,1265,1271,1272],used_dev:[891,900],used_mem_on_dev:891,used_mem_on_nod:1117,used_node_str:1117,used_node_strs_dict:1117,useful:[40,41,891,935,1117,1198,1207,1229,1272],user:[1229,1246,1257,1258,1259,1272,1275],uses:1229,using:[40,41,1063,1065,1066,1161,1164,1168,1180,1181,1198,1206,1210,1229,1246,1254,1271,1272,1275],util:[891,924,1117],utility_funct:[846,847,848],v_with_top_v_key_chain:[1258,1259],val:[40,41,427,445,446,447,850,885,965,1013,1014,1015,1039,1040,1227],valid:[846,847,848,941,946,965,1046,1047,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],valid_dtyp:941,valu:[40,41,427,825,831,832,833,836,837,843,844,850,869,891,903,934,935,965,966,968,970,971,979,980,981,983,984,990,994,1000,1001,1002,1003,1018,1020,1021,1024,1026,1033,1034,1035,1036,1037,1038,1039,1040,1041,1056,1059,1060,1061,1063,1067,1070,1079,1085,1086,1092,1094,1095,1096,1097,1106,1107,1108,1113,1114,1115,1117,1161,1165,1166,1167,1171,1172,1173,1176,1177,1180,1182,1184,1198,1209,1210,1215,1216,1223,1246,1257,1260,1261,1262,1264],value_is_nan:965,valueerror:[838,840],vanilla:[1113,1115],var_shap:1237,variabl:[15,16,17,18,19,40,41,336,460,588,744,965,975,1013,1014,1015,1016,1017,1049,1063,1066,1067,1068,1069,1070,1071,1072,1074,1077,1113,1114,1115,1116,1198,1209,1215,1216,1235,1236,1237,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],variable_data:[460,744,1063],varianc:[40,41,1180,1188,1275],varieti:1272,variou:[43,1229],vector:[40,41,469,472,836,837,965,981,986,1086,1092,1093,1198,1207,1246,1256],vector_norm:[40,41,96,219,402,520,645,836],vector_to_skew_symmetric_matrix:[165,345,469,597,754,1086],verbos:1274,veri:[43,1229],verifi:43,version:43,via:[1161,1162,1169,1272],view:[1079,1084],vision:1229,visual:1272,volum:[1198,1203],vw_tm1:[1063,1066,1070],wai:[1272,1275],wait:[40,41,42],want:[1229,1272,1275],warn:[59,66,67,68,69,70],warp:[465,466,1079,1080],watch:1271,weight:[1063,1065,1066,1068,1070,1071,1072,1198,1207,1208,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1262,1264,1265],weight_initi:[1246,1247,1248,1249,1250,1251,1252,1253,1255,1256],weights_path:[1258,1259],well:[40,41,965,1009],were:[40,41,1117],what:[43,1229],when:[40,41,42,43,891,965,977,1047,1060,1086,1092,1117,1229,1258,1259,1272,1275],where:[40,41,43,287,427,677,825,831,846,847,848,850,875,965,968,976,979,983,996,1011,1018,1029,1061,1086,1092,1161,1162,1169,1173,1174],wherea:43,wherebi:[1161,1170],whether:[15,18,19,40,41,42,846,847,848,889,890,891,909,922,926,930,935,938,940,941,951,955,956,957,964,965,967,973,974,987,990,995,1000,1007,1009,1012,1016,1017,1022,1043,1049,1058,1059,1063,1066,1067,1068,1069,1070,1071,1072,1074,1113,1114,1115,1116,1117,1161,1162,1163,1165,1169,1170,1173,1174,1190,1191,1198,1206,1229,1235,1236,1246,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],which:[40,41,42,43,476,818,819,820,821,822,823,836,837,838,839,846,847,848,889,890,891,900,901,909,914,915,916,917,920,921,922,923,925,927,931,933,934,935,941,946,951,955,964,965,968,972,982,984,986,987,988,990,997,1001,1002,1003,1004,1010,1011,1019,1020,1021,1028,1029,1030,1031,1032,1034,1037,1038,1045,1048,1058,1060,1062,1063,1066,1067,1068,1070,1071,1072,1074,1076,1077,1079,1081,1086,1089,1097,1102,1117,1161,1165,1166,1167,1171,1172,1173,1174,1175,1176,1177,1180,1182,1183,1184,1185,1186,1187,1188,1190,1195,1198,1209,1210,1229,1235,1236,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1268,1269,1271,1272],whitespac:[40,41,42],whose:[43,825,826,838,839,850,875,965,972,977,1180,1181,1182,1183,1184,1186,1188],why:[1229,1230],width:[1079,1084],wiki:1275,wikipedia:1275,window:[1079,1084,1198,1199,1200,1201,1202,1203,1204,1205,1246,1247,1248,1249,1250,1251,1252,1253],wise:[40,41,43,825,827,828,832,833,850,869,875,965,978,979,994,998,999,1024,1026,1036,1063,1066,1068,1070,1072,1094,1095,1096,1097,1098,1100,1101,1102,1105,1106,1107,1108,1109,1111,1190,1191,1192,1193,1194,1195,1196,1197],wish:1272,with_arg_label:[1217,1219,1223,1258,1259],with_array_cach:[1217,1218,1219,1223],with_bia:[1246,1256],with_cal:[965,990],with_default_key_color:[40,41],with_edge_label:[1217,1219,1223,1258,1259],with_entries_as_list:[40,41],with_grad:[1063,1073,1258,1259],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1117,with_output_label:[1217,1219,1223,1258,1259],with_partial_v:[1258,1259],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,427,456,965,1045,1117],with_to_kv_fn:[1246,1257],with_to_out_fn:[1246,1257],with_to_q_fn:[1246,1257],within:[15,18,19,965,968,1086,1092,1173,1177],without:[40,41,43,965,1033,1035,1041,1161,1163,1272],wonder:1229,word:[15,16,17,965,968,1173,1177,1235,1236],work:[43,1271],worker:[891,900,901,1117],worker_class:[891,900,901,1117],worker_kwarg:1117,would:[43,843,844,1190,1195,1229,1272,1275],wrap:[15,40,41,42,43,425,427,460,465,469,473,474,476,965,977,1063,1077,1229],wrapper:43,write:[40,41,43,1229,1230,1275],written:[43,1229,1275],ws_new:[1063,1066,1068,1070,1071,1072],x1_i:[825,827,832,965,994,1097,1105],x2_i:[825,827,832,965,994,1097,1105],x_feat_dim:[1198,1209],x_i:[825,826,830,834],x_in:[1229,1271],x_inv:[1086,1088],x_max:[427,965,979],x_min:[427,965,979],x_sub:1117,xkk:1275,xkkm1:1275,xkm1km1:1275,xs0:1117,xs_t:1117,year:[1229,1275],yet:[1161,1170,1275],yield:[965,1060],you:[43,1229,1271,1272,1275],your:[1229,1230,1271,1272,1275],your_awesome_project:1272,yourself:[43,1229],yourslef:43,youtub:43,zero:[40,41,77,203,383,501,626,818,836,837,846,847,848,965,983,1029,1031,1037,1038,1061,1062,1063,1065,1066,1070,1071,1198,1206,1229,1237,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1262,1263,1264,1265],zero_pad:[287,427,551,677,965],zeros_lik:[126,287,427,551,677,965],zip:1117,zk_e:1275},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","vector_norm","Manipulation functions","flip","squeeze","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":990,"function":[77,80,85,95,98,101,102,103,105,106,203,206,211,218,221,224,225,226,228,229,383,386,391,401,404,407,408,409,411,412,501,504,509,519,522,525,526,527,529,530,626,629,634,644,647,650,651,652,654,655,818,821,825,835,838,841,842,843,845,846],Ones:1242,Using:1272,abs:[288,552,678,966],aco:[766,1098],acosh:[767,1099],activ:[187,370,487,618,796,1190,1232],adam:1263,adam_step:1065,adam_upd:1066,algebra:[96,165,219,345,402,469,520,597,645,754,836],all:[107,230,413,531,656,847],all_equ:967,all_nested_indic:1162,ani:[108,231,414,532,657,848],api:[0,43,75,110,201,233,381,416,499,534,624,659,816],arang:[127,289,428,553,679,968],arg_nam:969,argmax:[128,429,554,680,970],argmin:[129,430,555,681,971],args_to_ivi:16,args_to_n:17,argsort:[104,227,410,528,653,844],arithmet:[1,111,234,417,535,660],arrai:[0,3,43,75,109,110,112,130,201,232,233,235,242,290,381,415,416,418,431,499,533,534,536,556,624,658,659,661,682,816,850,972],array_equ:[291,683,973],arrays_equ:974,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[768,1100],asinh:[86,392,510,635,826],assert_supports_inplac:975,atan2:[770,1102],atan:[769,1101],atanh:[771,1103],attribut:[5,113,236,419,537,662],backend:[43,73],bilinear_resampl:[162,342,466,594,751,1080],binary_cross_entropi:1212,bitwis:[7,114,237,420,538,663],bitwise_and:[87,212,393,511,636,827],broadcast_to:[292,684,976],builder:51,builtin:[109,232,242,415,533,658,850],builtin_ab:[243,851],builtin_add:[244,852],builtin_and:[245,853],builtin_bool:[246,854],builtin_contain:[247,855],builtin_deepcopi:[248,856],builtin_dir:[249,857],builtin_eq:[250,858],builtin_float:[251,859],builtin_floordiv:[252,860],builtin_g:[253,861],builtin_getattr:[254,862],builtin_getattribut:[255,863],builtin_getitem:[256,864],builtin_gt:[257,865],builtin_int:[258,866],builtin_invert:[259,867],builtin_l:[260,868],builtin_lt:[261,540,665,869],builtin_mul:[262,870],builtin_n:[263,871],builtin_neg:[264,872],builtin_or:[265,873],builtin_po:[266,874],builtin_pow:[267,875],builtin_radd:[268,876],builtin_rand:[269,877],builtin_rfloordiv:[270,878],builtin_rmul:[271,879],builtin_ror:[272,880],builtin_rpow:[273,881],builtin_rsub:[274,882],builtin_rtruediv:[275,883],builtin_rxor:[276,884],builtin_setitem:[277,885],builtin_sub:[278,886],builtin_truediv:[279,887],builtin_xor:[280,888],cache_fn:977,cast:[131,293,432,557,685,945],ceil:[294,686,978],choleski:[755,1087],choose_random_framework:61,citat:1229,clear_framework_stack:62,clear_mem_on_dev:[671,907],clip:[295,687,979],clip_matrix_norm:980,clip_vector_norm:981,clone:1132,clone_arrai:1133,clone_it:1134,clone_nest:1135,clonedit:1119,cloneditem:1118,clonednest:1120,closest_valid_dtyp:946,code:1275,comparison:[9,115,238,421,539,664],compil:[296,433,688,889,890,1217],compile_graph:1218,concaten:[132,297,434,558,689,982],constant:[76,202,382,500,625,817],constant_pad:[298,559,690,983],contain:[40,41],container_typ:[691,984],content:1229,contribut:43,conv1d:[193,373,491,808,1199,1247],conv1d_transpos:[194,374,492,809,1200],conv1dtranspos:1248,conv2d:[195,375,493,620,810,1201,1249],conv2d_transpos:[196,376,494,811,1202],conv2dtranspos:1250,conv3d:[197,377,495,621,812,1203,1251],conv3d_transpos:[198,378,496,813,1204],conv3dtranspos:1252,convers:15,convert:[189,804,1235],convert_dtyp:947,copy_arrai:[692,985],copy_nest:1163,core:[118,241,424,543,668,849],cos:[88,394,512,637,828],cosh:[89,395,513,638,772,829,1104],cprint:1274,creat:43,creation:[77,203,383,501,626,818],cross:[299,693,986],cross_entropi:1213,cumprod:[133,300,435,694,987],cumsum:[695,988],current_framework:63,current_framework_str:[696,989],data:[80,84,206,210,386,390,504,508,629,633,821,824],debug_mod:45,debugg:44,default_devic:908,default_dtyp:948,default_float_dtyp:949,default_int_dtyp:950,default_nod:1136,depthwise_conv2d:[199,379,497,622,814,1205],depthwiseconv2d:1253,design:43,dev:[121,283,546,672,909],dev_clon:910,dev_clone_arrai:911,dev_clone_it:912,dev_clone_nest:913,dev_dist:914,dev_dist_arrai:915,dev_dist_it:916,dev_dist_nest:917,dev_from_str:[122,284,547,673,918],dev_to_str:[123,285,548,674,919],dev_unifi:920,dev_unify_arrai:921,dev_unify_it:922,dev_unify_nest:923,dev_util:924,devclonedit:894,devcloneditem:893,devclonednest:895,devdistit:897,devdistitem:896,devdistnest:898,devic:[20,119,281,425,544,669,891],devmapp:900,devmappermultiproc:901,distribute_nest:1137,divid:1105,document:1229,dropout:[1206,1254],dtype:[134,301,436,560,697,941,951],dtype_bit:[135,302,437,561,698,952],dtype_from_str:[136,303,438,562,699,953],dtype_to_str:[137,304,439,563,700,954],ecosystem:52,einops_rearrang:991,einops_reduc:992,einops_repeat:993,einsum:[179,361,479,610,788,1181],elementwis:[85,211,391,509,634,825],equal:[564,701,994],erf:[475,773,1106],execute_with_gradi:[159,337,461,589,745,1067],exist:995,exp:[774,1107],expand_dim:[305,702,996],finfo:[82,208,388,506,631,822],firstlayersiren:1239,flip:[99,222,405,523,648,839,997],float_img_to_uint8_img:1081,floor:[306,703,998],floormod:[307,704,999],fomaml_step:1114,fork:43,fourier_encod:1000,framework:59,full:[138,308,440,565,705,1001],func:72,gather:[139,309,441,566,706,1002],gather_nd:[140,310,442,567,707,1003],geglu:1233,gelu:[371,488,797,1191,1234],gener:[22,126,287,427,551,677,965],get_all_arrays_in_memori:1004,get_all_arrays_on_dev:925,get_framework:64,get_min_bas:1005,get_min_denomin:1006,get_num_dim:[708,1007],get_referrers_recurs:1008,global:1220,glorotuniform:1240,gpu_is_avail:[926,1138],gradient:[24,158,336,460,588,744,1063],gradient_descent_upd:1068,gradient_imag:[163,343,467,595,752,1082],graph:1223,gym:53,handler:59,has_nan:1009,helper:1225,ident:[141,311,443,568,709,1010],iinfo:[83,209,389,507,632,823],imag:[26,161,341,465,593,750,1079],index_nest:1164,indices_wher:[142,312,444,710,1011],initi:1237,inplac:[11,116,239,422,541,666],inplace_arrays_support:1012,inplace_decr:[143,313,445,569,711,1013],inplace_incr:[144,314,446,570,712,1014],inplace_upd:[145,315,447,571,713,1015],inplace_variables_support:1016,inv:[756,1088],invalid_dtyp:955,is_arrai:[146,316,448,572,714,1017],is_float_dtyp:956,is_int_dtyp:957,is_vari:[160,338,462,590,746,1069],isfinit:[90,213,396,514,639,830],isinf:[317,573,715,1018],isnan:[91,214,397,515,640,831],ivi:[43,50,51,52,53,54,55,56,57,58,815,1271,1272,1275],ivymodul:[190,805],jax:74,keep:43,lamb:1264,lamb_upd:1070,lar:1265,lars_upd:1071,layer:[192,372,490,619,807,1198,1246],layer_norm:1216,layernorm:1261,leaky_relu:[798,1192],less:[92,215,398,516,641,832],linalg:[28,1086],linear:[96,165,219,345,402,469,520,597,645,754,836,1207,1256],linear_resampl:[147,318,449,574,716,1019],linspac:[148,319,450,575,717,1020],log:[775,1108,1226],log_global_inference_abs_tim:1221,log_global_inference_rel_tim:1222,logic:[30,169,351,473,602,762,1094],logical_and:[352,763,1095],logical_not:[93,216,399,517,642,833],logical_or:[353,764,1096],logspac:[149,320,451,576,718,1021],loss:1211,lstm:1255,lstm_updat:1208,maml_step:1115,manipul:[98,221,404,522,647,838],map:1165,map_nest_at_index:1166,map_nest_at_indic:1167,match_kwarg:1022,math:[32,170,354,474,603,765,1097],matmul:[321,577,719,1023],matrix_norm:[166,346,470,598,757,1089],maximum:[720,1024],mech:54,memori:55,meshgrid:[322,721,1025],meta:[34,1113],method:[95,218,401,519,644,835],minimum:[722,1026],model:56,modul:[1258,1259,1271],multi:1117,multi_head_attent:1209,multi_index_nest:1168,multidevcontain:42,multidevit:904,multidevitem:903,multidevnest:905,multiheadattent:1257,multinodeit:1123,multinodeitem:1122,multinodenest:1124,multinomi:[172,356,477,605,781,1174],multiprocess:[723,1027],mxnet:200,nativ:1271,nest:1161,nested_indices_wher:1169,nested_map:1170,network:1271,next:1229,node:[1117,1139],node_dist:1140,node_dist_arrai:1141,node_dist_it:1142,node_str:1143,node_to_str:1144,node_util:1145,nodedistit:1126,nodedistitem:1125,nodedistnest:1127,nodemapp:1129,nodemappermultiproc:1130,norm:[1215,1260],num_arrays_in_memori:1028,num_arrays_on_dev:927,num_cpu_cor:928,num_gpu:[124,929,1146],numpi:380,nutshel:1229,one_hot:[150,452,578,724,1029],ones:[78,204,384,502,627,819,1030],ones_lik:[151,323,453,579,725,1031],oper:[1,3,7,9,11,13,43,111,112,114,115,116,117,234,235,237,238,239,240,417,418,420,421,422,423,535,536,538,539,541,542,660,661,663,664,666,667],optim:[1262,1266],optimizer_upd:1072,overview:1229,param:1227,percent_used_mem_on_dev:930,percent_used_mem_on_nod:1147,pinv:[347,758,1090],portabl:1275,print_all_arrays_in_memori:1032,print_all_arrays_on_dev:931,profil:[120,282,426,545,670,906,1131],pull:43,queue_timeout:1033,randint:[173,357,606,782,1175],random:[36,171,355,476,604,780,1173],random_crop:1083,random_norm:[174,358,607,783,1176],random_uniform:[175,359,608,784,1177],reduce_max:[180,362,480,611,789,1182],reduce_mean:[181,363,481,612,790,1183],reduce_min:[182,364,482,613,791,1184],reduce_prod:[183,365,483,614,792,1185],reduce_std:[366,1186],reduce_sum:[184,367,484,615,793,1187],reduce_var:[185,368,485,616,794,1188],reduct:[38,178,360,478,609,787,1180],reflect:[13,117,240,423,542,667],relu:[799,1193],repeat:[324,726,1034],reptile_step:1116,request:43,reshap:[727,1035],robot:57,round:[325,728,1036],run:1272,scaled_dot_product_attent:1210,scatter_flat:[152,326,454,580,729,1037],scatter_nd:[153,327,455,581,730,1038],search:[101,224,407,525,650,841],seed:[176,785,1178],sequenti:[1268,1269],set:[102,225,408,526,651,842],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:932,set_default_dtyp:958,set_default_float_dtyp:959,set_default_int_dtyp:960,set_default_nod:1148,set_exception_debug_mod:48,set_framework:65,set_min_bas:1039,set_min_denomin:1040,set_nest_at_index:1171,set_nest_at_indic:1172,set_queue_timeout:1041,set_split_factor:[933,1149],set_tmp_dir:1042,set_with_grad:1073,sgd:1267,shape:[731,1043],shape_to_tupl:1044,show_graph:1219,shuffl:[177,786,1179],sigmoid:[800,1194],signatur:[95,218,401,519,644,835],sin:[776,1109],sinh:[777,1110],siren:1243,softmax:[188,489,801,1195],softplu:[802,1196],sort:[103,226,409,527,652,843],sparse_cross_entropi:1214,split:[154,328,456,582,732,1045],split_factor:[934,1150],split_func_cal:[935,1151],sqrt:[94,217,400,518,643,834],squeez:[100,223,406,524,649,840],stable_divid:1046,stable_pow:1047,stack:[329,733,1048],stack_imag:[164,344,468,596,753,1084],standard:43,statist:[105,228,411,529,654,845],stop_gradi:[339,463,591,747,1074],str_to_nod:1152,submodul:43,supports_inplac:1049,svd:[349,600,760,1092],swapax:[583,734,1050],tan:[778,1111],tanh:[779,803,1112,1197],tensorflow:498,tile:[330,584,735,1051],tmp_dir:1052,to_dev:[125,286,549,675,936],to_ivi:18,to_ivy_modul:[191,806,1236],to_list:[736,1053],to_n:19,to_nod:1153,to_numpi:[737,1054],to_scalar:[738,1055],torch:623,total_mem_on_dev:937,total_mem_on_nod:1154,tpu_is_avail:[550,676,938,1155],train:1271,trainabl:1271,transpos:[155,331,457,739,1056],tree:1229,try_else_non:1057,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,206,210,386,390,504,508,629,633,821,824],uint8_img_to_float_img:1085,unifi:1156,unify_arrai:1157,unify_it:1158,unify_nest:1159,unset_debug_mod:49,unset_default_devic:939,unset_default_dtyp:961,unset_default_float_dtyp:962,unset_default_int_dtyp:963,unset_framework:71,unset_with_grad:1075,unstack:[156,332,458,585,740,1058],updat:43,used_mem_on_dev:940,used_mem_on_nod:1160,util:[106,229,412,530,655,846],valid_dtyp:964,value_is_nan:1059,variabl:[340,464,592,748,1076],variable_data:[749,1077],vector_norm:[97,220,403,521,646,837],vector_to_skew_symmetric_matrix:[168,350,472,601,761,1093],verbos:1273,vision:58,where:[333,741,1060,1229],why:1275,with_grad:1078,wrapper:72,write:1272,your:43,zero:[79,205,385,503,628,820,1245],zero_pad:[334,586,742,1061],zeros_lik:[157,335,459,587,743,1062]}})